2025-10-14T00:00:23.231+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:00:23.237+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:00:23.238+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:00:23.238+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:00:23.239+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:23.240+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:23.241+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:23.241+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:23.241+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:23.241+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:00:44.750+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:00:44.750+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:00:44.751+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:00:44.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:00:44.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:44.753+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:00:44.754+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:01:16.142+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:01:16.142+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:01:16.143+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:01:16.143+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:01:16.144+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:01:16.145+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:03:14.293+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:03:14.294+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:03:14.295+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:03:14.295+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:14.296+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:14.297+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:03:36.476+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:03:36.476+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:03:36.477+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:03:36.478+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:03:36.478+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:36.479+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:36.480+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:03:50.225+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:03:50.225+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:03:50.226+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:03:50.226+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:03:50.227+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:50.227+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:50.227+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:03:50.228+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:04:55.109+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:55.109+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:55.109+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:04:55.110+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:04:55.110+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.110+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.111+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:04:55.899+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:55.899+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:55.899+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:04:55.900+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:04:55.900+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:55.901+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:04:58.254+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=null, status=1, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:58.254+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=null, status=1, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:58.255+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE status = ?
2025-10-14T00:04:58.255+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-14T00:04:58.256+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:58.256+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:58.256+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:58.256+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:04:58.257+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:04:59.487+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=null, status=0, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:59.488+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=null, status=0, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:04:59.488+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE status = ?
2025-10-14T00:04:59.488+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 0(String)
2025-10-14T00:04:59.489+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-14T00:05:00.346+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=null, status=1, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:05:00.346+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=null, status=1, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:05:00.347+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE status = ?
2025-10-14T00:05:00.347+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:05:00.348+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:05:00.349+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:09:53.764+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:09:53.764+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:09:53.765+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:09:53.766+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:09:53.766+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:09:53.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:09:53.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:09:53.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:09:53.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:09:53.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:10:57.120+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:10:57.121+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:10:57.122+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:10:57.122+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:10:57.123+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:10:57.124+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:10:57.124+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:10:57.124+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:10:57.124+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:10:57.124+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:10:57.124+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:11:17.914+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:11:17.914+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:11:17.914+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:11:17.914+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:11:17.915+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:17.915+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:17.915+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:17.915+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:17.915+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:17.915+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:17.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:11:27.202+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:11:27.202+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:11:27.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:11:27.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:11:27.204+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:27.204+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:27.205+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:11:48.773+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:11:48.773+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:11:48.776+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:11:48.776+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:48.777+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:11:48.778+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:12:07.749+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:12:07.750+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:12:07.750+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:12:07.750+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:12:07.751+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:07.751+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:07.751+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:07.752+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:12:44.004+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:12:44.004+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:12:44.004+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:12:44.004+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:12:44.005+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:44.005+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:44.005+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:44.006+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:12:59.766+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:12:59.766+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:12:59.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:12:59.767+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:12:59.768+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:14:02.995+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:02.995+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:02.995+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:14:02.995+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:14:02.997+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:02.997+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:02.997+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:02.998+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:14:09.590+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:09.590+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:09.590+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:14:09.591+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:09.592+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:09.593+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:14:29.543+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:29.544+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:29.544+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:29.545+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:29.547+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:14:38.289+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:38.289+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:14:38.290+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:14:38.290+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:14:38.291+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:14:38.292+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:14:38.292+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:16:58.534+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:16:58.538+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:19:25.470+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:19:25.470+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:19:25.470+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:19:25.470+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:19:25.471+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:25.471+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:25.471+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:25.473+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:19:35.129+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:19:35.129+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:19:35.130+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:19:35.130+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:35.131+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:35.132+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:35.132+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:35.132+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:35.132+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:35.132+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:19:46.073+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:19:46.073+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:19:46.073+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:19:46.078+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:19:46.078+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:19:46.079+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:20:04.916+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:20:04.916+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:20:04.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:20:04.917+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:04.918+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:20:29.525+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:20:29.525+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:20:29.526+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:20:29.526+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:29.527+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:29.528+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:20:29.528+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:20:29.528+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:20:29.528+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:24:17.710+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:24:17.710+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:24:17.711+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:24:17.711+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:24:17.712+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:24:17.713+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:24:17.714+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:24:32.442+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:24:32.443+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:24:32.443+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-14T00:24:32.444+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-14T00:24:32.444+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:24:32.444+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:24:32.444+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:24:32.444+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-14T00:27:59.526+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:27:59.526+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:27:59.526+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:27:59.526+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:27:59.530+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:27:59.530+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:27:59.530+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:27:59.531+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:28:15.663+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:28:15.663+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:28:15.664+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:28:15.664+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.665+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.666+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:28:15.679+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:28:15.679+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:28:15.680+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:28:15.680+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.681+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:28:15.682+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:29:44.000+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:29:44.000+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.001+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:29:44.032+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:29:44.032+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:29:44.032+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:29:44.032+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:29:44.033+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.033+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.033+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.033+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.033+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.033+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:29:44.034+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:31:08.192+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:31:08.192+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:31:08.193+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:31:08.193+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:31:08.194+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.194+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.194+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.195+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.196+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.196+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.196+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:31:08.200+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:31:08.201+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:31:08.201+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:31:08.201+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:31:08.202+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.202+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:31:08.203+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:31:08.204+08:00 DEBUG 32000 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 5
2025-10-14T00:33:51.954+08:00  INFO 32000 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-14T00:33:51.954+08:00  INFO 32000 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-14T00:33:54.933+08:00  INFO 14948 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 14948 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-14T00:33:54.934+08:00 DEBUG 14948 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-14T00:33:54.935+08:00  INFO 14948 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-14T00:33:54.974+08:00  INFO 14948 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-14T00:33:54.974+08:00  INFO 14948 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-14T00:33:55.817+08:00  INFO 14948 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-14T00:33:55.828+08:00  INFO 14948 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-14T00:33:55.828+08:00  INFO 14948 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-14T00:33:55.869+08:00  INFO 14948 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-14T00:33:55.874+08:00  INFO 14948 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 900 ms
2025-10-14T00:33:56.089+08:00  INFO 14948 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-14T00:33:56.191+08:00  INFO 14948 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@265e89e2
2025-10-14T00:33:56.192+08:00  INFO 14948 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-14T00:33:56.515+08:00  INFO 14948 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-14T00:33:56.540+08:00  INFO 14948 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-14T00:33:56.549+08:00  INFO 14948 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.927 seconds (process running for 2.215)
2025-10-14T00:34:06.902+08:00  INFO 14948 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-14T00:34:06.904+08:00  INFO 14948 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-14T00:34:06.905+08:00  INFO 14948 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-14T00:34:06.975+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 控制器参数:120
2025-10-14T00:34:06.976+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 业务层参数:120
2025-10-14T00:34:06.994+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.delete      : ==>  Preparing: DELETE FROM vehicle WHERE id = ?
2025-10-14T00:34:07.065+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.delete      : ==> Parameters: 120(Long)
2025-10-14T00:34:07.071+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.delete      : <==    Updates: 1
2025-10-14T00:34:07.175+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:07.176+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:07.225+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:34:07.225+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:34:07.343+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:07.347+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:07.348+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:07.349+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:07.350+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:07.355+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:07.356+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:07.357+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:07.358+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:07.364+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:07.365+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:07.365+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:07.366+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:34:28.327+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=119, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:28.328+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=119, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:28.329+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-14T00:34:28.330+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 119(Long)
2025-10-14T00:34:28.331+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:28.332+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:28.332+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:28.332+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-14T00:34:34.408+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:34.409+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:34.410+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:34:34.410+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:34:34.412+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.412+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.412+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.412+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.413+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.413+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.414+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.414+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.414+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.415+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.415+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.415+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.415+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:34:34.423+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:34.423+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:34:34.423+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:34:34.424+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:34:34.425+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.425+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.425+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.425+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.427+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.427+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.427+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.428+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.428+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.428+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:34:34.429+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:34:34.429+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:34:34.429+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:35:17.729+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:35:17.730+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:35:17.730+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:35:17.731+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:35:17.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.735+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.735+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.737+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.737+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.738+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.738+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.738+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.739+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.739+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:35:17.747+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:35:17.748+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:35:17.748+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:35:17.749+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:35:17.750+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.750+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.750+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.751+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.751+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.751+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.752+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.752+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.752+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.752+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:35:17.753+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:35:17.754+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:35:17.754+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:36:15.224+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-14T00:36:15.224+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-14T00:36:15.225+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:15.227+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:15.227+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:15.228+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:15.228+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:15.228+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:15.228+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:15.228+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:15.228+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:15.229+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:15.229+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:15.229+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:15.229+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:15.229+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:15.230+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:15.230+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-14T00:36:23.255+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:23.255+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:23.256+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:36:23.257+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:36:23.257+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.258+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.258+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.258+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.258+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.258+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.258+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.259+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.259+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.259+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.259+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.259+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.259+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:36:23.267+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:23.267+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:23.267+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:36:23.267+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:36:23.268+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.269+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.269+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.269+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.269+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.269+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:23.270+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:36:37.673+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:37.674+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:37.677+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:36:37.677+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:36:37.678+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.678+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.679+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.680+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.680+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.680+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.680+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:36:37.686+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:37.686+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:37.688+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:36:37.688+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:36:37.690+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.690+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.690+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.692+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:37.693+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:37.693+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:37.693+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:36:39.397+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-14T00:36:39.398+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-14T00:36:39.400+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:39.400+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:39.400+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:39.400+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:39.401+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:39.404+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:39.404+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:39.404+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-14T00:36:43.477+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-14T00:36:43.478+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-14T00:36:43.479+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:43.479+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:43.480+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:43.481+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:43.481+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:43.481+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-14T00:36:44.430+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-14T00:36:44.431+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 0(String)
2025-10-14T00:36:44.431+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:44.432+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:44.432+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:44.432+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-14T00:36:45.853+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-14T00:36:45.853+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-14T00:36:45.855+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:45.855+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:45.855+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:45.856+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:45.856+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:45.856+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:45.856+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:45.856+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:45.857+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:45.857+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:45.857+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:45.857+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:45.857+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-14T00:36:46.910+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-14T00:36:46.911+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 0(String)
2025-10-14T00:36:46.912+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:46.913+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:46.913+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:46.913+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-14T00:36:48.006+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-14T00:36:48.006+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-14T00:36:48.007+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:48.007+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:48.007+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:48.007+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:48.007+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:48.007+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:48.008+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:48.008+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:48.008+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:48.008+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:48.008+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:48.008+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:48.011+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-14T00:36:49.819+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-14T00:36:49.820+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-14T00:36:49.821+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:49.822+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T00:36:49.823+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-14T00:36:54.166+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:54.167+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:54.167+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:36:54.167+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:36:54.168+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.168+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.168+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.168+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.169+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T00:36:54.178+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:54.178+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T00:36:54.179+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T00:36:54.179+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.181+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.182+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T00:36:54.182+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T00:36:54.182+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T00:36:54.182+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T08:25:51.465+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:51.466+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:51.468+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T08:25:51.469+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T08:25:51.470+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:51.471+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:51.471+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:51.471+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:51.471+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:51.471+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:51.473+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T08:25:53.804+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=125000, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:53.805+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=125000, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:53.806+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE license = ?
2025-10-14T08:25:53.806+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 125000(String)
2025-10-14T08:25:53.809+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:56.205+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:56.209+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T08:25:58.879+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=小米, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:58.879+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=小米, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:25:58.880+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE brand like CONCAT('%',?,'%')
2025-10-14T08:25:58.881+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 小米(String)
2025-10-14T08:25:58.885+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:58.885+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:58.885+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:58.885+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:58.885+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:58.885+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:58.886+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:25:58.886+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:25:58.886+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:25:58.886+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-14T08:26:01.810+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=小, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:26:01.811+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=小, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:26:01.812+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE brand like CONCAT('%',?,'%')
2025-10-14T08:26:01.812+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 小(String)
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:01.813+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:01.814+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:01.814+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:01.814+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-14T08:26:03.236+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:26:03.236+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:26:03.237+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T08:26:03.237+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T08:26:03.238+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:03.238+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:03.238+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:03.238+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:03.238+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:03.238+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:26:03.239+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T08:26:47.727+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-14T08:26:47.728+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-14T08:26:47.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:26:47.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:26:47.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:26:47.732+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:26:47.733+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:26:47.733+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:26:47.733+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:26:47.733+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:26:47.734+08:00 DEBUG 14948 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-14T08:53:26.981+08:00  INFO 23372 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 23372 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-14T08:53:26.981+08:00 DEBUG 23372 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-14T08:53:26.981+08:00  INFO 23372 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-14T08:53:27.020+08:00  INFO 23372 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-14T08:53:27.020+08:00  INFO 23372 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-14T08:53:27.835+08:00  INFO 23372 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-14T08:53:27.851+08:00  INFO 23372 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-14T08:53:27.851+08:00  INFO 23372 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-14T08:53:27.903+08:00  INFO 23372 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-14T08:53:27.905+08:00  INFO 23372 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 883 ms
2025-10-14T08:53:28.153+08:00  INFO 23372 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-14T08:53:28.260+08:00  INFO 23372 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74afb04b
2025-10-14T08:53:28.260+08:00  INFO 23372 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-14T08:53:28.555+08:00  INFO 23372 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-14T08:53:28.588+08:00  INFO 23372 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-14T08:53:28.590+08:00  INFO 23372 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.894 seconds (process running for 2.263)
2025-10-14T08:53:33.692+08:00  INFO 23372 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-14T08:53:33.692+08:00  INFO 23372 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-14T08:53:33.693+08:00  INFO 23372 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-14T08:53:33.804+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-14T08:53:33.837+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-14T08:53:33.887+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:53:33.887+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:53:33.890+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:53:33.890+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:53:33.890+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:53:33.892+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:53:33.895+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:53:33.896+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:53:33.896+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:53:33.897+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:53:33.897+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:53:33.897+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:53:33.897+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-14T08:53:33.897+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-14T08:53:33.897+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-14T08:53:33.904+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-14T08:53:42.691+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:42.693+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:42.695+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T08:53:42.697+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T08:53:42.700+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.700+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.702+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.703+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.703+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.703+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.704+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.704+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.704+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.705+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.706+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.706+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.707+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T08:53:42.713+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:42.714+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:42.715+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.716+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.721+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.721+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.721+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.722+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:42.722+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:42.722+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:42.723+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T08:53:46.103+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:46.103+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:46.105+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-14T08:53:46.106+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-14T08:53:46.111+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:46.112+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:46.112+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:46.112+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-14T08:53:49.064+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:49.065+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:49.066+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-14T08:53:49.066+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-14T08:53:49.066+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:49.066+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:49.066+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:49.066+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-14T08:53:51.406+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:51.406+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:51.408+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-14T08:53:51.409+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-14T08:53:51.411+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:51.411+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:51.411+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:51.411+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-14T08:53:53.662+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=119, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:53.663+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=119, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:53:53.664+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-14T08:53:53.664+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 119(Long)
2025-10-14T08:53:53.665+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:53:53.665+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:53:53.665+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:53:53.665+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-14T08:57:11.269+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=125000, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:57:11.270+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=125000, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:57:11.272+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE license = ?
2025-10-14T08:57:11.272+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 125000(String)
2025-10-14T08:57:11.272+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:57:13.175+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:57:13.190+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T08:57:13.190+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T08:57:13.190+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T08:57:13.190+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T09:08:19.928+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:19.928+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:19.943+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T09:08:19.950+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:19.972+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T09:08:20.004+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:20.006+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:20.010+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T09:08:20.010+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T09:08:20.011+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:20.011+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:20.011+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:20.014+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:20.014+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:20.014+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:20.014+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:20.014+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:20.015+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:20.015+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:20.015+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:20.015+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:20.015+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T09:08:21.234+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:21.235+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:21.236+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T09:08:21.236+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T09:08:21.239+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.240+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.241+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.241+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.241+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.241+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.241+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
2025-10-14T09:08:21.255+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:21.255+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-14T09:08:21.257+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-14T09:08:21.259+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-14T09:08:21.260+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.261+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.261+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.261+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.261+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.261+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.261+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.262+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.262+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.262+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-14T09:08:21.262+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-14T09:08:21.262+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-14T09:08:21.264+08:00 DEBUG 23372 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 4
