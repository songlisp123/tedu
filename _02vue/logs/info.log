2025-10-13T00:00:18.293+08:00  INFO 6644 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T00:00:18.303+08:00  INFO 6644 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T00:00:21.075+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 23236 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T00:00:21.080+08:00 DEBUG 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T00:00:21.080+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T00:00:21.118+08:00  INFO 23236 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T00:00:21.118+08:00  INFO 23236 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T00:00:21.917+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T00:00:21.929+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T00:00:21.929+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T00:00:21.972+08:00  INFO 23236 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T00:00:21.972+08:00  INFO 23236 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 854 ms
2025-10-13T00:00:22.164+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T00:00:22.254+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3dd65f04
2025-10-13T00:00:22.254+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T00:00:22.579+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T00:00:22.595+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T00:00:22.612+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.792 seconds (process running for 2.059)
2025-10-13T00:01:05.093+08:00  INFO 23236 --- [_02vue] [http-nio-8060-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T00:01:05.093+08:00  INFO 23236 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T00:01:05.093+08:00  INFO 23236 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2025-10-13T00:01:05.224+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.controller.userController  : UserRegPara(id=27, username=null, password=A0116658, email=null, gender=null, level=null, status=null)
2025-10-13T00:01:05.228+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.service.imp.ServiceImp     : 参数:UserRegPara(id=27, username=null, password=A0116658, email=null, gender=null, level=null, status=null)
2025-10-13T00:01:05.232+08:00 ERROR 23236 --- [_02vue] [http-nio-8060-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.function.Supplier.get()" because "supplier" is null] with root cause

java.lang.NullPointerException: Cannot invoke "java.util.function.Supplier.get()" because "supplier" is null
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at com._02vue.demo.user.service.imp.ServiceImp.toGender(ServiceImp.java:76) ~[classes/:na]
	at com._02vue.demo.user.service.imp.ServiceImp.save(ServiceImp.java:51) ~[classes/:na]
	at com._02vue.demo.user.controller.userController.save(userController.java:41) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.28.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.28.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

2025-10-13T00:02:11.762+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.controller.userController  : UserRegPara(id=27, username=null, password=A0116658, email=null, gender=null, level=null, status=null)
2025-10-13T00:02:11.762+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.service.imp.ServiceImp     : 参数:UserRegPara(id=27, username=null, password=A0116658, email=null, gender=null, level=null, status=null)
2025-10-13T00:02:11.763+08:00 ERROR 23236 --- [_02vue] [http-nio-8060-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.function.Supplier.get()" because "supplier" is null] with root cause

java.lang.NullPointerException: Cannot invoke "java.util.function.Supplier.get()" because "supplier" is null
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at com._02vue.demo.user.service.imp.ServiceImp.toGender(ServiceImp.java:76) ~[classes/:na]
	at com._02vue.demo.user.service.imp.ServiceImp.save(ServiceImp.java:51) ~[classes/:na]
	at com._02vue.demo.user.controller.userController.save(userController.java:41) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.28.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.28.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

2025-10-13T00:29:23.720+08:00  INFO 23236 --- [_02vue] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 6 class path changes (1 addition, 0 deletions, 5 modifications)
2025-10-13T00:29:23.735+08:00  INFO 23236 --- [_02vue] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T00:29:23.750+08:00  INFO 23236 --- [_02vue] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T00:29:23.789+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 23236 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T00:29:23.789+08:00 DEBUG 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T00:29:23.789+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T00:29:23.948+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T00:29:23.948+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T00:29:23.948+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T00:29:23.975+08:00  INFO 23236 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T00:29:23.975+08:00  INFO 23236 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 179 ms
2025-10-13T00:29:24.011+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-10-13T00:29:24.011+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57cb4c2b
2025-10-13T00:29:24.011+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-10-13T00:29:24.086+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T00:29:24.086+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T00:29:24.101+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 0.327 seconds (process running for 1743.547)
2025-10-13T00:29:24.101+08:00  INFO 23236 --- [_02vue] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-10-13T00:30:07.293+08:00  INFO 23236 --- [_02vue] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2025-10-13T00:30:07.310+08:00  INFO 23236 --- [_02vue] [Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2025-10-13T00:30:07.310+08:00  INFO 23236 --- [_02vue] [Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2025-10-13T00:30:07.355+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 23236 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T00:30:07.355+08:00 DEBUG 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T00:30:07.358+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T00:30:07.508+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T00:30:07.508+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T00:30:07.508+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T00:30:07.538+08:00  INFO 23236 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T00:30:07.538+08:00  INFO 23236 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 180 ms
2025-10-13T00:30:07.576+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2025-10-13T00:30:07.581+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c127858
2025-10-13T00:30:07.581+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2025-10-13T00:30:07.651+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T00:30:07.653+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T00:30:07.659+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 0.319 seconds (process running for 1787.105)
2025-10-13T00:30:07.659+08:00  INFO 23236 --- [_02vue] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-10-13T00:30:09.069+08:00  INFO 23236 --- [_02vue] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-10-13T00:30:09.099+08:00  INFO 23236 --- [_02vue] [Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2025-10-13T00:30:09.099+08:00  INFO 23236 --- [_02vue] [Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2025-10-13T00:30:09.153+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 23236 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T00:30:09.153+08:00 DEBUG 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T00:30:09.153+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T00:30:09.390+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T00:30:09.392+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T00:30:09.392+08:00  INFO 23236 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T00:30:09.428+08:00  INFO 23236 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T00:30:09.429+08:00  INFO 23236 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 274 ms
2025-10-13T00:30:09.478+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2025-10-13T00:30:09.481+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32ab8f8a
2025-10-13T00:30:09.481+08:00  INFO 23236 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2025-10-13T00:30:09.556+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T00:30:09.565+08:00  INFO 23236 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T00:30:09.568+08:00  INFO 23236 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 0.438 seconds (process running for 1789.012)
2025-10-13T00:30:09.569+08:00  INFO 23236 --- [_02vue] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-10-13T00:31:13.896+08:00  INFO 23236 --- [_02vue] [http-nio-8060-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T00:31:13.897+08:00  INFO 23236 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T00:31:13.897+08:00  INFO 23236 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2025-10-13T00:31:13.907+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.controller.userController  : 进入到修改密码的模块，参数：UserResetPassword(id=27, password=A0116658)
2025-10-13T00:31:13.908+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.service.imp.ServiceImp     : 业务层数据接受：UserResetPassword(id=27, password=A0116658)
2025-10-13T00:31:13.925+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.m.userMapper.updatePassword      : ==>  Preparing: UPDATE users set password = ? WHERE id = ?
2025-10-13T00:31:13.949+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.m.userMapper.updatePassword      : ==> Parameters: A0116658(String), 27(Long)
2025-10-13T00:31:13.967+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.m.userMapper.updatePassword      : <==    Updates: 1
2025-10-13T00:36:15.300+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116658)
2025-10-13T00:36:15.301+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116658)
2025-10-13T00:36:15.303+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T00:36:15.304+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116658(String)
2025-10-13T00:36:15.326+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:36:15.326+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:36:15.326+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:36:15.326+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T00:39:45.096+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116658)
2025-10-13T00:39:45.096+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116658)
2025-10-13T00:39:45.096+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T00:39:45.096+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116658(String)
2025-10-13T00:39:45.101+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:39:45.101+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:39:45.101+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:39:45.101+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T00:40:02.756+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.controller.userController  : 进入到修改密码的模块，参数：UserResetPassword(id=27, password=A0116659)
2025-10-13T00:40:02.756+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.service.imp.ServiceImp     : 业务层数据接受：UserResetPassword(id=27, password=A0116659)
2025-10-13T00:40:02.757+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.m.userMapper.updatePassword      : ==>  Preparing: UPDATE users set password = ? WHERE id = ?
2025-10-13T00:40:02.758+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.m.userMapper.updatePassword      : ==> Parameters: A0116659(String), 27(Long)
2025-10-13T00:40:02.759+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.m.userMapper.updatePassword      : <==    Updates: 1
2025-10-13T00:40:21.737+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T00:40:21.738+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T00:40:21.739+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T00:40:21.739+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T00:40:21.740+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:40:21.741+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:40:21.741+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:40:21.741+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T00:40:41.104+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T00:40:41.104+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T00:40:41.106+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:40:41.106+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:40:41.106+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:40:41.106+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:40:41.106+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:40:41.107+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:40:41.107+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:40:41.107+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:40:41.107+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:40:41.108+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:40:41.108+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:40:41.108+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:40:41.108+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:40:41.108+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:40:41.108+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:40:41.109+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T00:41:18.053+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%')
2025-10-13T00:41:18.058+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 曹(String)
2025-10-13T00:41:18.059+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:18.059+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:18.059+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:18.059+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T00:41:22.034+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%')
2025-10-13T00:41:22.035+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 赵(String)
2025-10-13T00:41:22.036+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:22.036+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:22.036+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:22.037+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T00:41:25.346+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T00:41:25.346+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T00:41:25.346+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:25.346+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:25.346+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:25.348+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:25.349+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T00:41:25.349+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T00:41:25.349+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T00:41:25.349+08:00 DEBUG 23236 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T00:50:55.400+08:00  INFO 23236 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2025-10-13T00:50:55.400+08:00  INFO 23236 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2025-10-13T00:50:56.884+08:00  INFO 22288 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 22288 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T00:50:56.889+08:00 DEBUG 22288 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T00:50:56.889+08:00  INFO 22288 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T00:50:56.930+08:00  INFO 22288 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T00:50:56.930+08:00  INFO 22288 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T00:50:57.726+08:00  INFO 22288 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T00:50:57.737+08:00  INFO 22288 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T00:50:57.737+08:00  INFO 22288 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T00:50:57.782+08:00  INFO 22288 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T00:50:57.782+08:00  INFO 22288 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 852 ms
2025-10-13T00:50:58.013+08:00  INFO 22288 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T00:50:58.103+08:00  INFO 22288 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7cb48351
2025-10-13T00:50:58.103+08:00  INFO 22288 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T00:50:58.423+08:00  INFO 22288 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T00:50:58.446+08:00  INFO 22288 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T00:50:58.453+08:00  INFO 22288 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.859 seconds (process running for 2.17)
2025-10-13T08:35:05.002+08:00  INFO 22288 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T08:35:05.002+08:00  INFO 22288 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T15:12:47.120+08:00  INFO 31620 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 31620 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T15:12:47.121+08:00 DEBUG 31620 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T15:12:47.122+08:00  INFO 31620 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T15:12:47.160+08:00  INFO 31620 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T15:12:47.160+08:00  INFO 31620 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T15:12:48.012+08:00  INFO 31620 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T15:12:48.022+08:00  INFO 31620 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T15:12:48.022+08:00  INFO 31620 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T15:12:48.063+08:00  INFO 31620 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T15:12:48.063+08:00  INFO 31620 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 902 ms
2025-10-13T15:12:48.291+08:00  INFO 31620 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T15:12:48.389+08:00  INFO 31620 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c8bf7c3
2025-10-13T15:12:48.390+08:00  INFO 31620 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T15:12:48.764+08:00  INFO 31620 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T15:12:48.791+08:00  INFO 31620 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T15:12:48.796+08:00  INFO 31620 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.945 seconds (process running for 2.279)
2025-10-13T15:12:59.067+08:00  INFO 31620 --- [_02vue] [http-nio-8060-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T15:12:59.067+08:00  INFO 31620 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T15:12:59.069+08:00  INFO 31620 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-10-13T15:12:59.209+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:12:59.246+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:12:59.288+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:12:59.289+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:12:59.290+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:12:59.291+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:12:59.291+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:12:59.291+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:12:59.291+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:12:59.291+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:12:59.291+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:12:59.295+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:12:59.296+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:12:59.296+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:12:59.297+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:12:59.297+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:12:59.297+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:12:59.298+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T15:13:05.306+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%')
2025-10-13T15:13:05.307+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 赵(String)
2025-10-13T15:13:05.311+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:05.312+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:05.312+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:05.313+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:13:07.973+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%') AND status = ?
2025-10-13T15:13:07.974+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 赵(String), 1(String)
2025-10-13T15:13:07.976+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:07.976+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:07.976+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:07.977+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:13:08.902+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%') AND status = ?
2025-10-13T15:13:08.903+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 赵(String), 0(String)
2025-10-13T15:13:08.904+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 0
2025-10-13T15:13:10.931+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:13:10.931+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 0(String)
2025-10-13T15:13:10.933+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:10.934+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:10.934+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:10.935+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:13:12.951+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:13:12.952+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-13T15:13:12.953+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:12.953+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:12.953+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:12.953+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:12.954+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:12.954+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:12.954+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:12.955+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:12.955+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:12.955+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:12.955+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:12.955+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:12.956+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-13T15:13:14.237+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:13:14.237+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 0(String)
2025-10-13T15:13:14.238+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:14.238+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:14.238+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:14.239+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:13:14.957+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:13:14.958+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-13T15:13:14.959+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:14.960+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:14.960+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:14.960+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:14.960+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:14.960+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:14.962+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:14.963+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:14.963+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:14.965+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:14.965+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:14.965+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:14.965+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-13T15:13:16.668+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:13:16.670+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:13:16.672+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:16.672+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:16.672+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:16.673+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:16.673+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:16.673+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:16.674+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:16.676+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:16.677+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T15:13:33.091+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T15:13:33.092+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T15:13:33.092+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T15:13:33.092+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T15:13:33.097+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:33.097+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:33.097+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:33.097+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T15:13:55.592+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:13:55.592+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:13:55.593+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:55.593+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:55.593+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:55.594+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:55.594+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:55.594+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:55.594+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:13:55.595+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:13:55.596+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T15:14:42.506+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%')
2025-10-13T15:14:42.507+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: z赵(String)
2025-10-13T15:14:42.507+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 0
2025-10-13T15:14:44.693+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%')
2025-10-13T15:14:44.694+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 赵(String)
2025-10-13T15:14:44.695+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:44.695+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:44.695+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:44.695+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:14:48.493+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%') AND status = ?
2025-10-13T15:14:48.494+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 赵(String), 1(String)
2025-10-13T15:14:48.495+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:48.495+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:48.495+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:48.495+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:14:50.171+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:14:50.172+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:50.173+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:50.174+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:50.174+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:50.174+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:50.174+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:50.174+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:50.174+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-13T15:14:52.341+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:14:52.342+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 0(String)
2025-10-13T15:14:52.343+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:52.344+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:52.344+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:52.344+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:14:54.077+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:14:54.078+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 1(String)
2025-10-13T15:14:54.079+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:54.079+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:54.079+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:54.079+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:54.079+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:54.080+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:54.081+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 4
2025-10-13T15:14:54.933+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE status = ?
2025-10-13T15:14:54.933+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 0(String)
2025-10-13T15:14:54.934+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:14:54.934+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:14:54.935+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:14:54.935+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 1
2025-10-13T15:15:07.346+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:15:07.347+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:15:07.348+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:15:07.348+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:15:07.348+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:15:07.348+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:15:07.348+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:15:07.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:15:07.350+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:15:07.350+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:15:07.350+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:15:07.350+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T15:16:35.650+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T15:16:35.651+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T15:16:35.651+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T15:16:35.652+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T15:16:35.653+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:35.653+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:35.653+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:35.653+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T15:16:40.201+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:16:40.202+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:16:40.203+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:40.203+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:40.203+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:40.204+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:40.205+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:40.205+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:40.205+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:40.205+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:40.205+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:40.205+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T15:16:45.176+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE username like CONCAT('%',?,'%')
2025-10-13T15:16:45.176+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 宋(String)
2025-10-13T15:16:45.177+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 0
2025-10-13T15:16:46.479+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:16:46.480+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:16:46.480+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:46.480+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:46.480+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:46.481+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:46.482+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:16:46.482+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:16:46.482+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:16:46.482+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T15:57:44.347+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=刘备, password=A0116659)
2025-10-13T15:57:44.349+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=刘备, password=A0116659)
2025-10-13T15:57:44.351+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T15:57:44.353+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 刘备(String), 刘备(String), A0116659(String)
2025-10-13T15:57:44.355+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:57:44.355+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:57:44.355+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:57:44.355+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T15:58:00.549+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.controller.userController  : 进入到修改密码的模块，参数：UserResetPassword(id=26, password=kGbm4JyIQ5yA)
2025-10-13T15:58:00.551+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.demo.user.service.imp.ServiceImp     : 业务层数据接受：UserResetPassword(id=26, password=kGbm4JyIQ5yA)
2025-10-13T15:58:00.552+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.m.userMapper.updatePassword      : ==>  Preparing: UPDATE users SET password = ? WHERE id = ?
2025-10-13T15:58:00.553+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.m.userMapper.updatePassword      : ==> Parameters: kGbm4JyIQ5yA(String), 26(Long)
2025-10-13T15:58:00.558+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-1] c._.d.u.m.userMapper.updatePassword      : <==    Updates: 1
2025-10-13T15:58:12.111+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=刘备, password=A0116659)
2025-10-13T15:58:12.111+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=刘备, password=A0116659)
2025-10-13T15:58:12.111+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T15:58:12.113+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 刘备(String), 刘备(String), A0116659(String)
2025-10-13T15:58:12.113+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-3] c._.demo.user.mapper.userMapper.login    : <==      Total: 0
2025-10-13T15:58:54.843+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T15:58:54.843+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T15:58:54.843+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T15:58:54.843+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T15:58:54.843+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:58:54.846+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:58:54.846+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:58:54.846+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T15:59:28.772+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T15:59:28.773+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T15:59:28.775+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:59:28.776+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:59:28.776+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:59:28.776+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:59:28.776+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:59:28.776+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:59:28.776+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T15:59:28.777+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:05:20.232+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T16:05:20.232+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T16:05:20.233+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T16:05:20.233+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T16:05:20.235+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:20.235+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:20.235+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:20.235+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T16:05:30.509+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:05:30.509+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:05:30.510+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:30.510+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:30.510+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:30.510+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:30.510+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:30.510+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:30.511+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:30.511+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:30.511+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:30.511+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:30.511+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:30.511+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:30.512+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:30.512+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:30.512+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:30.512+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:05:43.103+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:05:43.103+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:05:43.104+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:43.104+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:43.104+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:43.105+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:43.108+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:43.109+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:43.110+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:05:43.111+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:05:43.111+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:05:43.111+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:08:06.834+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:08:06.835+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:08:06.836+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:08:06.837+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-10] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:20:50.530+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:20:50.530+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:20:50.532+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:20:50.532+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:20:50.532+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:20:50.533+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:20:50.534+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:20:50.534+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:20:50.534+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:20:50.534+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-8] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:23:23.041+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:23:23.042+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:23:23.043+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:23.043+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:23.043+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:23.044+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:23.045+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-4] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:23:29.073+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:23:29.073+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:23:29.074+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-5] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T16:24:32.467+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T16:24:32.468+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T16:24:32.468+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:24:32.469+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:24:32.470+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T16:24:32.470+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T16:24:32.470+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T16:24:32.470+08:00 DEBUG 31620 --- [_02vue] [http-nio-8060-exec-2] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T20:25:31.388+08:00  INFO 17720 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 17720 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T20:25:31.389+08:00 DEBUG 17720 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T20:25:31.390+08:00  INFO 17720 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T20:25:31.425+08:00  INFO 17720 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T20:25:31.425+08:00  INFO 17720 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T20:25:32.268+08:00  INFO 17720 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T20:25:32.279+08:00  INFO 17720 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T20:25:32.279+08:00  INFO 17720 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T20:25:32.322+08:00  INFO 17720 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T20:25:32.323+08:00  INFO 17720 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 898 ms
2025-10-13T20:25:32.570+08:00  INFO 17720 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T20:25:32.685+08:00  INFO 17720 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@793c4b3e
2025-10-13T20:25:32.686+08:00  INFO 17720 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T20:25:33.042+08:00  INFO 17720 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T20:25:33.064+08:00  INFO 17720 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T20:25:33.067+08:00  INFO 17720 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 2.016 seconds (process running for 2.393)
2025-10-13T20:25:40.731+08:00  INFO 17720 --- [_02vue] [http-nio-8060-exec-9] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T20:25:40.732+08:00  INFO 17720 --- [_02vue] [http-nio-8060-exec-9] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T20:25:40.733+08:00  INFO 17720 --- [_02vue] [http-nio-8060-exec-9] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T20:25:40.787+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:25:40.788+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:25:40.822+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:25:40.855+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:25:40.894+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:25:40.896+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:25:40.896+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:25:40.896+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:26:18.223+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:26:18.223+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:26:18.224+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:26:18.225+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:26:18.226+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:26:18.226+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:26:18.226+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:26:18.226+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:26:24.337+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:26:24.337+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:26:24.338+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:26:24.339+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:26:24.340+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:26:24.340+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:26:24.340+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:26:24.340+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:27:21.829+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:27:21.829+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:27:21.830+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:27:21.831+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:27:21.832+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:27:21.832+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:27:21.832+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:27:21.832+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:28:25.802+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:28:25.803+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:28:25.804+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:28:25.804+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:28:25.806+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:28:25.806+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:28:25.806+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:28:25.806+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:28:28.281+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:28:28.281+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:28:28.283+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:28:28.284+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:28:28.285+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:28:28.285+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:28:28.285+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:28:28.286+08:00 DEBUG 17720 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:28:37.302+08:00  INFO 17720 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T20:28:37.306+08:00  INFO 17720 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T20:40:59.651+08:00  INFO 7012 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 7012 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T20:40:59.658+08:00 DEBUG 7012 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T20:40:59.659+08:00  INFO 7012 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T20:40:59.736+08:00  INFO 7012 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T20:40:59.737+08:00  INFO 7012 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T20:41:01.689+08:00  INFO 7012 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T20:41:01.711+08:00  INFO 7012 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T20:41:01.711+08:00  INFO 7012 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T20:41:01.810+08:00  INFO 7012 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T20:41:01.811+08:00  INFO 7012 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2074 ms
2025-10-13T20:41:02.441+08:00  INFO 7012 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T20:41:02.734+08:00  INFO 7012 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42725ab0
2025-10-13T20:41:02.736+08:00  INFO 7012 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T20:41:04.034+08:00  INFO 7012 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T20:41:04.092+08:00  INFO 7012 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T20:41:04.115+08:00  INFO 7012 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 5.033 seconds (process running for 5.33)
2025-10-13T20:42:51.237+08:00  INFO 7012 --- [_02vue] [http-nio-8060-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T20:42:51.239+08:00  INFO 7012 --- [_02vue] [http-nio-8060-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T20:42:51.240+08:00  INFO 7012 --- [_02vue] [http-nio-8060-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T20:42:51.405+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T20:42:51.405+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T20:42:51.422+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T20:42:51.463+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T20:42:51.528+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:42:51.530+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:42:51.530+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:42:51.542+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T20:43:05.415+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.controller.userController  : 控制器层面:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T20:43:05.415+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.service.imp.ServiceImp     : 业务层:UserLoginPara(loginPara=赵云, password=A0116659)
2025-10-13T20:43:05.416+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.mapper.userMapper.login    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users WHERE (username=? OR email=?) AND password=?
2025-10-13T20:43:05.417+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.mapper.userMapper.login    : ==> Parameters: 赵云(String), 赵云(String), A0116659(String)
2025-10-13T20:43:05.418+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:05.418+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:05.418+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:05.419+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.demo.user.mapper.userMapper.login    : <==      Total: 1
2025-10-13T20:43:10.042+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T20:43:10.044+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T20:43:10.046+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:10.047+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:10.047+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:10.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:10.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:10.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:10.049+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:10.049+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:10.049+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:10.050+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:10.050+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:10.050+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:10.051+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:10.052+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:10.052+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:10.054+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T20:43:15.487+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:43:15.490+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:43:15.492+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:43:15.492+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:43:15.493+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:43:15.494+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:43:15.495+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:43:15.497+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:43:18.891+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==>  Preparing: SELECT id,username,password,email,gender,level,status,create_time as createTime, update_time as updateTime FROM users
2025-10-13T20:43:18.892+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : ==> Parameters: 
2025-10-13T20:43:18.896+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:18.896+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:18.896+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:18.896+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:18.897+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:18.897+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:18.897+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:18.897+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:18.897+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:18.899+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:18.899+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:18.899+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:18.899+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.GenderHandler  : 调用此方法1……
2025-10-13T20:43:18.900+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.LevelHandler   : 调用此方法1……
2025-10-13T20:43:18.900+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.demo.user.EnumHandler.StatusHandler  : 调用此方法1……
2025-10-13T20:43:18.901+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.u.mapper.userMapper.selectUsers    : <==      Total: 5
2025-10-13T20:43:21.728+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:43:21.729+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:43:21.730+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:43:21.730+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:43:21.731+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:43:21.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:43:21.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:43:21.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:43:42.806+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:43:42.807+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:43:42.809+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:43:42.809+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:43:42.810+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:43:42.811+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:43:42.811+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:43:42.811+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:44:20.045+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:20.046+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:20.047+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:44:20.047+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:44:20.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:44:20.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:44:20.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:44:20.048+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:44:39.294+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:39.295+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:39.295+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:44:39.295+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:44:39.297+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:44:39.298+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:44:39.298+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:44:39.298+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:44:48.406+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:48.406+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:48.407+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:44:48.407+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:44:48.408+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:44:48.409+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:44:48.409+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:44:48.409+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:44:50.277+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:50.279+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:44:50.280+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:44:50.280+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:44:50.284+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:44:50.284+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:44:50.284+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:44:50.285+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:45:23.330+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:45:23.330+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:45:23.335+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:45:23.335+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:45:23.336+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:45:23.337+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:45:23.337+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:45:23.337+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:46:39.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:46:39.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:46:39.593+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:46:39.593+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:46:39.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:46:39.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:46:39.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:46:39.595+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:46:52.595+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:46:52.596+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:46:52.596+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:46:52.596+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:46:52.597+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:46:52.597+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:46:52.597+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:46:52.597+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:47:44.968+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:44.969+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:44.970+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:47:44.970+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:47:44.971+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:47:44.971+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:47:44.972+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:47:44.972+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:47:49.665+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=0, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:49.665+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=0, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:49.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:47:49.667+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 0(String)
2025-10-13T20:47:49.670+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T20:47:51.978+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:51.978+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:51.979+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:47:51.979+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 3(String)
2025-10-13T20:47:51.980+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T20:47:53.347+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=2, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:53.347+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=2, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:53.348+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:47:53.348+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 2(String)
2025-10-13T20:47:53.349+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T20:47:54.683+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:54.683+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:47:54.684+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:47:54.685+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T20:47:54.686+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:47:54.686+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:47:54.686+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:47:54.686+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:48:34.028+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:34.029+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:34.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:48:34.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T20:48:34.032+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:48:34.033+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:48:34.033+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:48:34.033+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:48:36.681+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:36.681+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:36.683+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:48:36.683+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 3(String)
2025-10-13T20:48:36.684+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T20:48:38.026+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=0, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:38.026+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=0, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:38.027+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:48:38.028+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 0(String)
2025-10-13T20:48:38.028+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T20:48:40.099+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:40.099+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:48:40.100+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T20:48:40.100+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T20:48:40.101+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:48:40.101+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:48:40.101+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:48:40.101+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:49:45.404+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:49:45.404+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:49:45.406+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:49:45.406+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:49:45.408+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:49:45.409+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:49:45.409+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:49:45.409+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:51:11.557+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:11.557+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:11.558+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:51:11.558+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:51:11.560+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:51:11.561+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:51:11.561+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:51:11.562+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:51:23.059+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:23.060+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:23.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:51:23.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:51:23.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:51:23.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:51:23.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:51:23.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:51:28.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:28.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:28.077+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:51:28.078+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:51:28.080+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:51:28.080+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:51:28.080+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:51:28.081+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:51:43.251+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:43.251+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:51:43.252+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:51:43.252+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:51:43.253+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:51:43.254+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:51:43.254+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:51:43.254+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:52:07.135+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:07.136+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:07.137+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:52:07.137+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:52:07.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:52:07.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:52:07.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:52:07.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:52:11.741+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:11.741+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:11.742+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:52:11.743+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:52:11.744+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:52:11.744+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:52:11.744+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:52:11.744+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:52:24.865+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:24.867+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:24.867+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:52:24.867+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:52:24.868+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:52:24.868+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:52:24.868+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:52:24.868+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:52:29.669+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:29.669+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:52:29.670+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:52:29.670+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:52:29.671+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:52:29.672+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:52:29.672+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:52:29.672+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:53:12.562+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:53:12.562+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:53:12.563+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:53:12.563+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:53:12.564+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:53:12.564+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:53:12.564+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:53:12.564+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:53:30.847+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:53:30.847+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:53:30.847+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:53:30.847+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:53:30.849+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:53:30.849+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:53:30.849+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:53:30.849+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:53:58.350+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:53:58.350+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:53:58.351+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:53:58.351+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:53:58.352+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:53:58.352+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:53:58.352+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:53:58.352+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:54:02.554+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:02.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:02.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:54:02.556+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:54:02.556+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:54:02.557+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:54:02.557+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:54:02.557+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:54:28.579+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:28.579+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:28.580+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:54:28.580+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:54:28.581+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:54:28.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:54:28.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:54:28.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:54:35.521+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:35.522+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:35.522+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:54:35.523+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:54:35.524+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:54:35.524+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:54:35.524+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:54:35.524+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:54:44.746+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:44.746+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:54:44.747+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:54:44.747+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:54:44.748+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:54:44.748+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:54:44.748+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:54:44.748+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:55:25.781+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:55:25.781+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:55:25.782+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:55:25.782+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:55:25.784+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:55:25.784+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:55:25.784+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:55:25.784+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:55:40.620+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:55:40.621+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:55:40.621+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:55:40.622+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:55:40.622+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:55:40.623+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:55:40.623+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:55:40.623+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:57:44.988+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:57:44.988+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:57:44.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:57:44.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:57:44.990+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:57:44.990+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:57:44.990+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:57:44.990+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:58:03.179+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:58:03.179+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:58:03.180+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:58:03.180+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:58:03.181+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:58:03.181+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:58:03.181+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:58:03.181+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:58:37.881+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:58:37.882+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:58:37.883+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:58:37.883+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:58:37.884+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:58:37.884+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:58:37.884+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:58:37.885+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:59:31.555+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:59:31.580+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:59:31.581+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:59:31.581+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:59:31.581+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:59:31.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:59:31.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:59:31.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:59:31.582+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T20:59:55.664+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:59:55.665+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T20:59:55.665+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T20:59:55.665+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T20:59:55.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T20:59:55.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T20:59:55.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T20:59:55.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:00:14.759+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:14.759+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:14.759+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:00:14.760+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:00:14.760+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:00:14.760+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:00:14.761+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:00:14.761+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:00:29.411+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:29.411+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:29.412+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:00:29.414+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:00:29.414+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:00:29.414+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:00:29.414+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:00:29.414+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:00:43.024+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:43.024+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:43.024+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:00:43.025+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:00:43.025+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:00:43.026+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:00:43.026+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:00:43.026+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:00:54.710+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:54.710+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:00:54.710+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:00:54.711+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:00:54.711+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:00:54.712+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:00:54.712+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:00:54.712+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:01:02.029+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:01:02.029+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:01:02.029+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:01:02.030+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:01:02.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:01:02.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:01:02.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:01:02.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:01:49.910+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:01:49.910+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:01:49.911+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:01:49.911+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:01:49.912+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:01:49.912+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:01:49.913+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:01:49.913+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:02:03.869+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:02:03.869+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:02:03.869+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:02:03.870+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:02:03.870+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:02:03.870+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:02:03.871+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:02:03.871+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:02:42.106+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:02:42.106+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:02:42.107+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:02:42.107+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:02:42.108+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:02:42.108+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:02:42.108+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:02:42.108+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:03:00.611+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:00.611+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:00.612+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:03:00.612+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:03:00.613+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:03:00.613+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:03:00.613+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:03:00.613+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:03:07.124+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:07.124+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:07.125+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:03:07.125+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:03:07.125+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:03:07.125+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:03:07.125+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:03:07.125+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:03:46.182+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:46.182+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:46.183+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:03:46.183+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:03:46.184+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:03:46.184+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:03:46.184+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:03:46.184+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:03:47.827+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:47.827+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:47.828+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:03:47.828+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:03:47.829+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:03:47.829+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:03:47.829+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:03:47.829+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:03:56.132+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:56.132+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:03:56.133+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:03:56.133+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:03:56.134+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:03:56.134+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:03:56.134+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:03:56.134+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:04:11.460+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:04:11.460+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:04:11.460+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:04:11.461+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:04:11.462+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:04:11.462+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:04:11.462+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:04:11.462+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:04:42.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:05:23.209+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:05:28.068+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:28.068+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:28.068+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:05:28.069+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:05:28.070+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:05:28.070+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:05:28.070+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:05:28.070+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:05:30.710+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:30.710+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:30.711+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:05:30.714+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:05:30.715+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:05:30.715+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:05:30.715+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:05:30.716+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:05:51.411+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:51.411+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:05:51.412+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:05:51.412+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:05:51.412+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:05:51.413+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:05:51.413+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:05:51.413+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:06:02.665+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:06:02.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:06:02.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:06:02.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:06:02.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:06:02.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:06:02.666+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:06:02.668+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:06:34.344+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:06:52.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:06:52.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:06:52.140+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:06:52.140+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:06:52.141+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:06:52.141+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:06:52.141+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:06:52.141+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:07:05.468+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:07:05.468+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:07:05.470+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:07:05.470+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:07:05.471+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:07:05.471+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:07:05.471+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:07:05.471+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:07:26.568+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:07:26.568+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:07:26.568+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:07:26.568+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:07:26.572+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:07:26.572+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:07:26.572+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:07:26.572+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:08:31.957+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:08:31.957+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:08:31.957+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:08:31.957+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:08:31.958+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:08:31.958+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:08:31.958+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:08:31.958+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:08:54.380+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:08:54.381+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:09:22.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:09:22.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:09:22.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:09:22.990+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:09:22.991+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:09:22.991+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:09:22.991+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:09:22.991+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:10:32.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:10:32.031+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:10:32.032+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:10:32.032+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:10:32.033+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:10:32.034+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:10:32.034+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:10:32.034+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:10:55.116+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:10:55.116+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:10:55.116+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:10:55.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:10:55.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:10:55.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:10:55.119+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:10:55.119+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:11:15.586+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:11:15.586+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:11:15.587+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:11:15.587+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:11:15.588+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:11:15.588+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:11:15.588+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:11:15.588+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:11:41.249+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:11:41.250+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:11:41.250+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:11:41.250+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:11:41.251+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:11:41.251+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:11:41.252+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:11:41.252+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:11:53.360+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:11:53.360+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:11:53.363+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:11:53.363+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:11:53.363+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:11:53.365+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:11:53.365+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:11:53.365+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:12:14.815+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:12:14.815+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:12:14.815+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:12:14.816+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:12:14.816+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:12:14.817+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:12:14.817+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:12:14.817+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:12:57.109+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:12:57.109+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:12:57.110+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:12:57.111+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:12:57.111+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:12:57.112+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:12:57.112+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:12:57.112+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:13:09.036+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:13:09.036+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:13:09.036+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:13:09.037+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:13:09.038+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:13:09.038+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:13:09.038+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:13:09.038+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:13:38.690+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:13:38.690+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:13:38.691+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:13:38.691+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:13:38.691+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:13:38.691+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:13:38.691+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:13:38.691+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:13:54.194+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:13:54.194+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:13:54.195+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:13:54.195+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:13:54.196+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:13:54.196+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:13:54.196+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:13:54.196+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:14:01.589+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:14:01.589+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:14:01.590+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:14:01.590+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:14:01.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:14:01.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:14:01.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:14:01.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:14:27.328+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:14:27.329+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:14:27.329+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:14:27.329+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:14:27.331+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:14:27.332+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:14:27.332+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:14:27.332+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:14:56.116+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:14:56.116+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:14:56.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:14:56.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:14:56.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:14:56.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:14:56.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:14:56.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:15:46.074+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:15:46.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:15:46.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:15:46.075+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:15:46.076+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:15:46.076+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:15:46.076+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:15:46.076+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:15:47.334+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:15:47.334+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:15:47.334+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:15:47.334+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:15:47.335+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:15:47.335+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:15:47.335+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:15:47.335+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:16:23.574+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:16:23.574+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:16:23.574+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:16:23.575+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:16:23.575+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:16:23.575+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:16:23.575+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:16:23.577+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:16:24.855+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:16:24.855+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:16:24.856+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:16:24.856+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:16:24.856+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:16:24.857+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:16:24.857+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:16:24.857+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:17:06.316+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:17:06.316+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:17:06.316+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:17:06.320+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:17:06.321+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:17:06.321+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:17:06.321+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:17:06.321+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:17:57.816+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:17:57.816+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:17:57.816+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:17:57.817+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:17:57.817+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:17:57.818+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:17:57.818+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:17:57.818+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:18:35.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:18:35.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:18:35.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:18:35.065+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:18:35.065+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:18:35.067+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:18:35.067+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:18:35.067+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:20:04.591+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:20:04.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:20:04.593+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:20:04.593+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:20:04.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:20:04.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:20:04.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:20:04.594+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:21:36.975+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:21:36.975+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:21:36.975+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:21:36.975+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:21:36.976+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:21:36.976+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:21:36.976+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:21:36.976+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:22:50.498+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:22:50.499+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:22:50.500+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:22:50.500+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:22:50.501+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:22:50.501+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:22:50.501+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:22:50.501+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:23:30.706+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:23:30.707+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:23:30.708+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:23:30.708+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:23:30.709+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:23:30.709+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:23:30.709+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:23:30.710+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:23:43.749+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:23:43.750+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:23:43.750+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:23:43.751+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:23:43.751+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:23:43.751+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:23:43.752+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:23:43.752+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:24:08.517+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:24:08.517+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:24:08.518+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:24:08.518+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:24:08.520+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:24:08.520+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:24:08.520+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:24:08.520+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:24:29.882+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:24:29.882+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:24:29.883+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:24:29.883+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:24:29.884+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:24:29.885+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:24:29.885+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:24:29.885+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:27:37.589+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:27:37.589+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:27:37.590+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:27:37.590+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:27:37.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:27:37.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:27:37.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:27:37.592+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:28:03.274+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:28:03.275+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:28:03.275+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:28:03.275+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:28:03.276+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:28:03.276+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:28:03.276+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:28:03.276+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:28:38.496+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:28:38.496+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:28:38.497+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:28:38.497+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:28:38.500+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:28:38.500+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:28:38.500+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:28:38.500+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:29:01.987+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:29:01.987+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:29:01.988+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:29:01.988+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:29:01.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:29:01.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:29:01.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:29:01.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:29:28.247+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:29:28.247+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:29:28.248+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:29:28.248+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:29:28.249+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:29:28.250+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:29:28.250+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:29:28.250+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:29:49.921+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:29:49.921+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:29:49.921+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:29:49.922+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:29:49.922+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:29:49.923+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:29:49.923+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:29:49.923+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:30:23.987+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:30:23.987+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:30:23.988+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:30:23.988+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:30:23.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:30:23.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:30:23.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:30:23.989+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:30:54.878+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:30:54.878+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:30:54.878+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:30:54.879+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:30:54.880+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:30:54.880+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:30:54.880+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:30:54.880+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:31:15.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:31:15.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:31:15.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:31:15.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:31:15.632+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:31:15.632+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:31:15.632+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:31:15.632+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:31:49.960+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:31:49.960+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:31:49.961+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:31:49.962+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:31:49.962+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:31:49.962+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:31:49.963+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:31:49.963+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:31:56.504+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:31:56.504+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:31:56.505+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:31:56.505+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:31:56.506+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:31:56.506+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:31:56.506+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:31:56.506+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:33:23.368+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:33:23.368+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:33:23.369+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:33:23.369+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:33:23.370+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:33:23.370+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:33:23.370+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:33:23.370+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:33:34.177+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:33:34.177+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:33:34.177+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:33:34.177+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:33:34.178+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:33:34.178+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:33:34.178+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:33:34.178+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:33:47.793+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:33:47.793+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:33:47.794+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:33:47.794+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:33:47.795+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:33:47.795+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:33:47.795+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:33:47.795+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:34:12.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:34:12.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:34:12.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:34:12.732+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:34:12.735+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:34:12.735+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:34:12.735+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:34:12.735+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:34:28.121+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:34:28.121+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:34:28.122+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:34:28.122+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:34:28.123+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:34:28.123+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:34:28.124+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:34:28.124+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:34:49.003+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:34:49.003+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:34:49.003+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:34:49.004+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:34:49.004+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:34:49.004+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:34:49.004+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:34:49.004+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:35:25.628+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:35:25.629+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:35:25.629+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:35:25.630+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:35:25.630+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:35:25.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:35:25.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:35:25.631+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:35:36.059+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:35:36.059+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:35:36.060+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:35:36.060+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:35:36.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:35:36.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:35:36.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:35:36.061+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:36:15.455+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:36:15.455+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:36:15.456+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:36:15.456+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:36:15.457+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:36:15.458+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:36:15.458+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:36:15.458+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:40:32.406+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:40:32.406+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:40:32.407+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:40:32.407+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:40:32.408+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:40:32.408+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:40:32.408+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:40:32.408+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:40:58.991+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:40:58.991+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:40:58.992+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:40:58.992+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:40:58.993+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:40:58.993+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:40:58.993+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:40:58.993+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:42:13.137+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:42:13.137+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:42:13.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:42:13.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:42:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:42:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:42:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:42:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:42:27.496+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:42:27.496+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:42:27.497+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:42:27.497+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:42:27.498+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:42:27.498+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:42:27.498+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:42:27.498+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:42:46.300+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:42:46.300+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:42:46.301+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:42:46.301+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:42:46.302+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:42:46.302+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:42:46.302+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:42:46.302+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:43:13.136+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:43:13.137+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:43:13.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:43:13.138+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:43:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:43:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:43:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:43:13.139+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:47:21.547+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:47:21.548+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:47:21.548+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:47:21.549+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:47:21.550+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:47:21.550+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:47:21.551+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:47:21.551+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:47:52.115+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:47:52.115+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:47:52.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:47:52.117+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:47:52.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:47:52.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:47:52.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:47:52.118+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:51:35.838+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:51:35.839+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:51:35.840+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:51:35.840+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:51:35.841+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:51:35.841+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:51:35.841+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:51:35.841+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:52:40.221+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:52:40.221+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:52:40.221+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:52:40.221+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:52:40.225+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:52:40.226+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:52:40.226+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:52:40.226+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:52:52.771+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:52:52.771+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:52:52.771+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:52:52.773+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:52:52.774+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:52:52.774+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:52:52.774+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:52:52.774+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:53:34.342+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:53:34.342+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:53:34.342+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:53:34.343+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:53:34.343+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:53:34.343+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:53:34.343+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:53:34.343+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:55:10.760+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:55:10.760+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:55:10.761+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:55:10.761+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:55:10.763+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:55:10.763+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:55:10.763+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:55:10.763+08:00 DEBUG 7012 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:55:13.423+08:00  INFO 7012 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T21:55:13.426+08:00  INFO 7012 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T21:55:16.602+08:00  INFO 5496 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 5496 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T21:55:16.603+08:00 DEBUG 5496 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T21:55:16.603+08:00  INFO 5496 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T21:55:16.646+08:00  INFO 5496 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T21:55:16.646+08:00  INFO 5496 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T21:55:17.548+08:00  INFO 5496 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T21:55:17.559+08:00  INFO 5496 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T21:55:17.559+08:00  INFO 5496 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T21:55:17.605+08:00  INFO 5496 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T21:55:17.605+08:00  INFO 5496 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 958 ms
2025-10-13T21:55:17.853+08:00  INFO 5496 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T21:55:17.955+08:00  INFO 5496 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1aa2034d
2025-10-13T21:55:17.957+08:00  INFO 5496 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T21:55:18.295+08:00  INFO 5496 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T21:55:18.324+08:00  INFO 5496 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T21:55:18.332+08:00  INFO 5496 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 2.049 seconds (process running for 2.425)
2025-10-13T21:58:27.274+08:00  INFO 5496 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T21:58:27.274+08:00  INFO 5496 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T21:58:27.275+08:00  INFO 5496 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T21:58:27.329+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:58:27.329+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T21:58:27.378+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T21:58:27.453+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T21:58:27.502+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T21:58:27.509+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T21:58:27.512+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T21:58:27.513+08:00 DEBUG 5496 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T21:59:13.911+08:00  WARN 5496 --- [_02vue] [http-nio-8060-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2025-10-15": expected format "yyyy-MM-dd HH:mm:ss"]
2025-10-13T21:59:46.309+08:00  INFO 5496 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T21:59:46.313+08:00  INFO 5496 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T21:59:49.022+08:00  INFO 4240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 4240 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T21:59:49.023+08:00 DEBUG 4240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T21:59:49.024+08:00  INFO 4240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T21:59:49.060+08:00  INFO 4240 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T21:59:49.061+08:00  INFO 4240 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T21:59:49.905+08:00  INFO 4240 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T21:59:49.914+08:00  INFO 4240 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T21:59:49.915+08:00  INFO 4240 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T21:59:49.958+08:00  INFO 4240 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T21:59:49.958+08:00  INFO 4240 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 897 ms
2025-10-13T21:59:50.171+08:00  INFO 4240 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T21:59:50.275+08:00  INFO 4240 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56f4bc69
2025-10-13T21:59:50.276+08:00  INFO 4240 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T21:59:50.578+08:00  INFO 4240 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T21:59:50.606+08:00  INFO 4240 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T21:59:50.613+08:00  INFO 4240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.864 seconds (process running for 2.158)
2025-10-13T22:00:00.352+08:00  INFO 4240 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T22:00:00.353+08:00  INFO 4240 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T22:00:00.356+08:00  INFO 4240 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2025-10-13T22:00:00.498+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 接受参数，RegVehiclePara(brand=小米, license=A0116659, model=su7, code=As15623, displacement=3, type=10, color=90, kilometers=125000, buyTime=Wed Oct 15 00:00:00 CST 2025, regTime=Sun Oct 19 00:00:00 CST 2025, price=125000, batteryType=20)
2025-10-13T22:00:00.511+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 业务层参数：RegVehiclePara(brand=小米, license=A0116659, model=su7, code=As15623, displacement=3, type=10, color=90, kilometers=125000, buyTime=Wed Oct 15 00:00:00 CST 2025, regTime=Sun Oct 19 00:00:00 CST 2025, price=125000, batteryType=20)
2025-10-13T22:00:00.540+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.mapper.VehicleMapper.save  : ==>  Preparing: INSERT INTO vehicle( brand, license, model, code, displacement, status, type, color, kilometers, reg_time, buy_time, price, battery_type, create_time, update_time, geofence_bind_status, geofence_id ) VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-10-13T22:00:00.609+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.mapper.VehicleMapper.save  : ==> Parameters: 小米(String), A0116659(String), su7(String), As15623(String), 3(String), 1(String), 10(String), 90(String), 125000(String), 2025-10-19 00:00:00.0(Timestamp), 2025-10-15 00:00:00.0(Timestamp), 125000(String), 20(String), 2025-10-13 22:00:00.514(Timestamp), 2025-10-13 22:00:00.514(Timestamp), 0(String), null
2025-10-13T22:00:01.012+08:00 ERROR 4240 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'A0116659' for key 'license'
### The error may exist in file [I:\20250820\jsd2507-ssm-advance\_02vue\target\classes\mappers\VehicleMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO vehicle(         brand,         license,         model,         code,         displacement,         status,         type,         color,         kilometers,         reg_time,         buy_time,         price,         battery_type,         create_time,         update_time,         geofence_bind_status,         geofence_id         )         VALUES(         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'A0116659' for key 'license'
; Duplicate entry 'A0116659' for key 'license'] with root cause

java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'A0116659' for key 'license'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.19.jar:3.5.19]
	at jdk.proxy3/jdk.proxy3.$Proxy87.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.19.jar:3.5.19]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333) ~[mybatis-spring-3.0.5.jar:3.0.5]
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.5.jar:3.0.5]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141) ~[mybatis-3.5.19.jar:3.5.19]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.19.jar:3.5.19]
	at jdk.proxy4/jdk.proxy4.$Proxy78.save(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355) ~[spring-aop-6.1.12.jar:6.1.12]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.12.jar:6.1.12]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.12.jar:6.1.12]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.1.12.jar:6.1.12]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.12.jar:6.1.12]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.1.12.jar:6.1.12]
	at jdk.proxy4/jdk.proxy4.$Proxy79.save(Unknown Source) ~[na:na]
	at com._02vue.demo.vehicle.service.impl.ServeImplement.save(ServeImplement.java:38) ~[classes/:na]
	at com._02vue.demo.vehicle.controller.VehicleController.save(VehicleController.java:26) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.28.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.12.jar:6.1.12]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.28.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.12.jar:6.1.12]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.12.jar:6.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.28.jar:10.1.28]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

2025-10-13T22:00:16.541+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 接受参数，RegVehiclePara(brand=小米, license=A0116658, model=su7, code=As15623, displacement=3, type=10, color=90, kilometers=125000, buyTime=Wed Oct 15 00:00:00 CST 2025, regTime=Sun Oct 19 00:00:00 CST 2025, price=125000, batteryType=20)
2025-10-13T22:00:16.542+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 业务层参数：RegVehiclePara(brand=小米, license=A0116658, model=su7, code=As15623, displacement=3, type=10, color=90, kilometers=125000, buyTime=Wed Oct 15 00:00:00 CST 2025, regTime=Sun Oct 19 00:00:00 CST 2025, price=125000, batteryType=20)
2025-10-13T22:00:16.543+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.mapper.VehicleMapper.save  : ==>  Preparing: INSERT INTO vehicle( brand, license, model, code, displacement, status, type, color, kilometers, reg_time, buy_time, price, battery_type, create_time, update_time, geofence_bind_status, geofence_id ) VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-10-13T22:00:16.546+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.mapper.VehicleMapper.save  : ==> Parameters: 小米(String), A0116658(String), su7(String), As15623(String), 3(String), 1(String), 10(String), 90(String), 125000(String), 2025-10-19 00:00:00.0(Timestamp), 2025-10-15 00:00:00.0(Timestamp), 125000(String), 20(String), 2025-10-13 22:00:16.543(Timestamp), 2025-10-13 22:00:16.543(Timestamp), 0(String), null
2025-10-13T22:00:16.548+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.mapper.VehicleMapper.save  : <==    Updates: 1
2025-10-13T22:00:16.575+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:00:16.576+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:00:16.588+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:00:16.592+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:00:16.615+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:16.616+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:16.616+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:16.617+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:16.617+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:16.617+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:16.617+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 2
2025-10-13T22:00:26.843+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 接受参数，RegVehiclePara(brand=小米, license=A0116657, model=su7, code=As15623, displacement=3, type=10, color=90, kilometers=125000, buyTime=Wed Oct 15 00:00:00 CST 2025, regTime=Sun Oct 19 00:00:00 CST 2025, price=125000, batteryType=20)
2025-10-13T22:00:26.844+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 业务层参数：RegVehiclePara(brand=小米, license=A0116657, model=su7, code=As15623, displacement=3, type=10, color=90, kilometers=125000, buyTime=Wed Oct 15 00:00:00 CST 2025, regTime=Sun Oct 19 00:00:00 CST 2025, price=125000, batteryType=20)
2025-10-13T22:00:26.845+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.mapper.VehicleMapper.save  : ==>  Preparing: INSERT INTO vehicle( brand, license, model, code, displacement, status, type, color, kilometers, reg_time, buy_time, price, battery_type, create_time, update_time, geofence_bind_status, geofence_id ) VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-10-13T22:00:26.847+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.mapper.VehicleMapper.save  : ==> Parameters: 小米(String), A0116657(String), su7(String), As15623(String), 3(String), 1(String), 10(String), 90(String), 125000(String), 2025-10-19 00:00:00.0(Timestamp), 2025-10-15 00:00:00.0(Timestamp), 125000(String), 20(String), 2025-10-13 22:00:26.845(Timestamp), 2025-10-13 22:00:26.845(Timestamp), 0(String), null
2025-10-13T22:00:26.850+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.mapper.VehicleMapper.save  : <==    Updates: 1
2025-10-13T22:00:26.856+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:00:26.856+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:00:26.857+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:00:26.857+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:00:26.858+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:26.858+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:26.858+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:26.859+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:26.859+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:26.859+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:26.859+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:26.860+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:26.860+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:26.860+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:00:42.747+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:00:42.748+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:00:42.749+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:00:42.749+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:00:42.750+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:42.750+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:42.750+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:42.751+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:42.751+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:42.751+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:42.751+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:00:42.752+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:00:42.752+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:00:42.752+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:01:01.034+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:01.034+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:01.036+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:01.036+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T22:01:01.037+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:01.037+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:01.038+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:01.038+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:01.038+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:01.038+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:01.038+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:01.039+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:01.039+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:01.039+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:01:05.189+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=2, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:05.190+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=2, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:05.191+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:05.191+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 2(String)
2025-10-13T22:01:05.192+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T22:01:08.814+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:08.815+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:08.817+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:08.818+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 3(String)
2025-10-13T22:01:08.819+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T22:01:14.195+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:14.195+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:14.196+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:14.196+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T22:01:14.197+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:14.198+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:14.199+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:14.199+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:01:42.641+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:42.641+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:42.641+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:01:42.641+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:01:42.646+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:42.646+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:42.646+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:42.649+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:42.665+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:42.666+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:42.666+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:42.667+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:42.667+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:42.667+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:01:44.803+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:44.803+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:44.805+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:44.805+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T22:01:44.806+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:44.806+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:44.806+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:44.806+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:44.807+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:44.807+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:44.807+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:44.807+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:44.807+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:44.807+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:01:46.741+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=2, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:46.741+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=2, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:46.742+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:46.742+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 2(String)
2025-10-13T22:01:46.743+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T22:01:48.134+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:48.134+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=3, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:48.135+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:48.135+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 3(String)
2025-10-13T22:01:48.136+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T22:01:49.255+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:49.255+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:49.256+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:49.256+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T22:01:49.257+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:49.257+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:49.257+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:49.258+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:01:50.624+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=0, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:50.624+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=0, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:50.625+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:50.626+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 0(String)
2025-10-13T22:01:50.627+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 0
2025-10-13T22:01:51.528+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:51.528+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=1, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:01:51.529+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE status = ?
2025-10-13T22:01:51.530+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 1(String)
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:01:51.531+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:01:51.532+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:02:26.298+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:02:26.298+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:02:26.299+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:02:26.299+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:02:26.300+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:02:26.300+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:02:26.300+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:02:26.300+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:02:26.300+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:02:26.301+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:02:26.301+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:02:26.301+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:02:26.301+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:02:26.301+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:02:31.104+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=小米, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:02:31.104+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=小米, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:02:31.106+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE brand like CONCAT('%',?,'%')
2025-10-13T22:02:31.107+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 小米(String)
2025-10-13T22:02:31.112+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:02:31.113+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:02:31.113+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:02:31.113+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:02:31.113+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:02:31.113+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:02:31.113+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 2
2025-10-13T22:03:25.168+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:03:25.168+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:03:25.169+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:03:25.169+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:03:25.170+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:03:25.171+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:03:25.172+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:07:05.976+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:07:05.976+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:07:05.977+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:07:05.977+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:07:05.978+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:05.978+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:05.979+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:07:09.694+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:07:09.694+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:07:09.695+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:07:09.695+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T22:07:09.698+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:09.698+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:09.698+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:09.698+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:07:56.498+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:07:56.498+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:07:56.498+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:07:56.502+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:07:56.502+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:07:56.503+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:07:56.505+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:08:01.904+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:01.904+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:01.906+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:08:01.906+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:08:01.908+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:01.908+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:01.908+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:01.908+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:01.908+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:01.908+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:01.909+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:01.909+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:01.909+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:01.909+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:08:05.721+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:05.721+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:05.724+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:08:05.724+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:05.725+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:05.726+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:05.726+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:05.726+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:08:23.291+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:23.291+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:23.291+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:08:23.292+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:08:23.292+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:23.293+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:08:26.722+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:26.722+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:26.723+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:08:26.723+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T22:08:26.724+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:26.724+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:26.724+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:26.726+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:08:43.446+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:43.446+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:43.446+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:08:43.446+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:43.448+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:08:45.400+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:45.400+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:08:45.400+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:08:45.401+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T22:08:45.401+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:08:45.402+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:08:45.402+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:08:45.402+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:09:08.675+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:09:08.675+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:09:08.675+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:09:08.676+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:09:08.677+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:09:08.677+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:09:08.677+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:09:08.677+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:09:12.157+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:09:12.157+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:09:12.158+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:09:12.158+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-13T22:09:12.159+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:09:12.159+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:09:12.159+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:09:12.160+08:00 DEBUG 4240 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:12:36.955+08:00  INFO 4240 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T22:12:36.960+08:00  INFO 4240 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T22:12:39.597+08:00  INFO 30728 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 30728 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T22:12:39.597+08:00 DEBUG 30728 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T22:12:39.602+08:00  INFO 30728 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T22:12:39.639+08:00  INFO 30728 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T22:12:39.639+08:00  INFO 30728 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T22:12:40.506+08:00  INFO 30728 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T22:12:40.516+08:00  INFO 30728 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T22:12:40.516+08:00  INFO 30728 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T22:12:40.556+08:00  INFO 30728 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T22:12:40.556+08:00  INFO 30728 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 916 ms
2025-10-13T22:12:40.801+08:00  INFO 30728 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T22:12:40.896+08:00  INFO 30728 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c66ce4c
2025-10-13T22:12:40.897+08:00  INFO 30728 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T22:12:41.262+08:00  INFO 30728 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T22:12:41.280+08:00  INFO 30728 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T22:12:41.289+08:00  INFO 30728 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.952 seconds (process running for 2.252)
2025-10-13T22:12:46.099+08:00  INFO 30728 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T22:12:46.101+08:00  INFO 30728 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T22:12:46.102+08:00  INFO 30728 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T22:12:46.166+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:12:46.168+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:12:46.211+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:12:46.237+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:12:46.307+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:12:46.308+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:12:46.309+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:12:46.310+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:12:46.311+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:12:46.311+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:12:46.311+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:12:46.311+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:12:46.311+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:12:46.311+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:13:16.474+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:13:16.475+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:13:16.476+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:13:16.477+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:13:16.478+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:13:16.479+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:13:16.479+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:13:16.479+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:14:53.912+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:14:53.912+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:14:53.912+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:14:53.916+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:14:53.918+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:14:53.918+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:14:53.918+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:14:53.918+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:14:53.919+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:14:53.919+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:14:53.919+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:14:53.919+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:14:53.919+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:14:53.919+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:14:58.402+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:14:58.402+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:14:58.403+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:14:58.403+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:14:58.404+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:14:58.405+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:14:58.405+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:14:58.405+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:15:10.153+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:10.154+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:10.155+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:15:10.155+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:15:10.156+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:10.156+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:10.157+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:10.157+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:10.157+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:10.157+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:10.158+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:10.159+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:10.159+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:10.160+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:15:32.258+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:32.259+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:32.260+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:15:32.260+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:15:32.261+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:32.261+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:32.261+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:32.261+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:15:44.912+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:44.913+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:44.913+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:15:44.914+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:15:44.915+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:44.915+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:44.915+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:44.915+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:44.915+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:44.916+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:44.916+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:44.916+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:44.916+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:44.916+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:15:46.492+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:46.493+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:15:46.494+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:15:46.495+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T22:15:46.499+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:15:46.502+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:15:46.503+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:15:46.503+08:00 DEBUG 30728 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:17:01.918+08:00  INFO 30728 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T22:17:01.922+08:00  INFO 30728 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T22:17:04.549+08:00  INFO 9616 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 9616 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T22:17:04.549+08:00 DEBUG 9616 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T22:17:04.552+08:00  INFO 9616 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T22:17:04.592+08:00  INFO 9616 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T22:17:04.592+08:00  INFO 9616 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T22:17:05.408+08:00  INFO 9616 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T22:17:05.419+08:00  INFO 9616 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T22:17:05.419+08:00  INFO 9616 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T22:17:05.463+08:00  INFO 9616 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T22:17:05.463+08:00  INFO 9616 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 871 ms
2025-10-13T22:17:05.680+08:00  INFO 9616 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T22:17:05.787+08:00  INFO 9616 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1aa2034d
2025-10-13T22:17:05.787+08:00  INFO 9616 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T22:17:06.118+08:00  INFO 9616 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T22:17:06.139+08:00  INFO 9616 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T22:17:06.146+08:00  INFO 9616 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.857 seconds (process running for 2.164)
2025-10-13T22:17:10.050+08:00  INFO 9616 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T22:17:10.050+08:00  INFO 9616 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T22:17:10.051+08:00  INFO 9616 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T22:17:10.117+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:17:10.118+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:17:10.159+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:17:10.196+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:17:10.245+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:17:10.247+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:17:10.247+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:17:10.250+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:17:14.018+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:17:14.018+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:17:14.020+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:17:14.021+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:17:14.022+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:17:14.022+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:17:14.023+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:17:14.023+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:17:35.848+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:17:35.848+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:17:35.849+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:17:35.850+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:17:35.851+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:17:35.851+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:17:35.851+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:17:35.851+08:00 DEBUG 9616 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:18:22.842+08:00  INFO 9616 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T22:18:22.849+08:00  INFO 9616 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T22:18:25.555+08:00  INFO 30656 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 30656 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T22:18:25.559+08:00 DEBUG 30656 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T22:18:25.559+08:00  INFO 30656 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T22:18:25.600+08:00  INFO 30656 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T22:18:25.600+08:00  INFO 30656 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T22:18:26.386+08:00  INFO 30656 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T22:18:26.393+08:00  INFO 30656 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T22:18:26.395+08:00  INFO 30656 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T22:18:26.436+08:00  INFO 30656 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T22:18:26.436+08:00  INFO 30656 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 835 ms
2025-10-13T22:18:26.669+08:00  INFO 30656 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T22:18:26.772+08:00  INFO 30656 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@265e89e2
2025-10-13T22:18:26.772+08:00  INFO 30656 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T22:18:27.094+08:00  INFO 30656 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T22:18:27.112+08:00  INFO 30656 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T22:18:27.121+08:00  INFO 30656 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.817 seconds (process running for 2.115)
2025-10-13T22:18:38.738+08:00  INFO 30656 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T22:18:38.740+08:00  INFO 30656 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T22:18:41.388+08:00  INFO 34240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 34240 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T22:18:41.390+08:00 DEBUG 34240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T22:18:41.391+08:00  INFO 34240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T22:18:41.427+08:00  INFO 34240 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T22:18:41.427+08:00  INFO 34240 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T22:18:42.212+08:00  INFO 34240 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T22:18:42.220+08:00  INFO 34240 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T22:18:42.220+08:00  INFO 34240 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T22:18:42.259+08:00  INFO 34240 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T22:18:42.259+08:00  INFO 34240 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 832 ms
2025-10-13T22:18:42.479+08:00  INFO 34240 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T22:18:42.577+08:00  INFO 34240 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e8ca9a0
2025-10-13T22:18:42.578+08:00  INFO 34240 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T22:18:42.910+08:00  INFO 34240 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T22:18:42.933+08:00  INFO 34240 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T22:18:42.940+08:00  INFO 34240 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.824 seconds (process running for 2.12)
2025-10-13T22:18:49.040+08:00  INFO 34240 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T22:18:49.041+08:00  INFO 34240 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T22:18:49.042+08:00  INFO 34240 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T22:18:49.107+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:18:49.107+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:18:49.150+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:18:49.191+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:18:49.230+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:18:49.230+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:18:49.235+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:18:49.237+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:18:49.237+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:18:49.237+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:18:49.238+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:18:49.239+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:18:49.239+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:18:49.239+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:18:53.162+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:18:53.163+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:18:53.164+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:18:53.165+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:18:53.166+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:18:53.167+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:18:53.167+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:18:53.167+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:19:37.380+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:19:37.380+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:19:37.382+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:19:37.382+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:19:37.383+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:19:37.383+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:19:37.384+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:19:37.384+08:00 DEBUG 34240 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:20:13.894+08:00  INFO 34240 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T22:20:13.897+08:00  INFO 34240 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T22:20:16.539+08:00  INFO 33740 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 33740 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T22:20:16.540+08:00 DEBUG 33740 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T22:20:16.542+08:00  INFO 33740 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T22:20:16.577+08:00  INFO 33740 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T22:20:16.577+08:00  INFO 33740 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T22:20:17.379+08:00  INFO 33740 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T22:20:17.387+08:00  INFO 33740 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T22:20:17.388+08:00  INFO 33740 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T22:20:17.427+08:00  INFO 33740 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T22:20:17.427+08:00  INFO 33740 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 849 ms
2025-10-13T22:20:17.658+08:00  INFO 33740 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T22:20:17.755+08:00  INFO 33740 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f3ec4ef
2025-10-13T22:20:17.757+08:00  INFO 33740 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T22:20:18.090+08:00  INFO 33740 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T22:20:18.109+08:00  INFO 33740 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T22:20:18.116+08:00  INFO 33740 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.821 seconds (process running for 2.102)
2025-10-13T22:21:07.725+08:00  INFO 33740 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T22:21:07.726+08:00  INFO 33740 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T22:21:07.729+08:00  INFO 33740 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-10-13T22:21:07.824+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:21:07.825+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:21:07.890+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:21:07.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:21:07.990+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:21:07.992+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:21:07.993+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:21:07.995+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:22:08.741+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:22:08.741+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:22:08.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:22:08.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T22:22:08.743+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:22:08.744+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:22:08.744+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:22:08.745+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:22:14.183+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:22:14.184+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:22:14.185+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:22:14.185+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-13T22:22:14.186+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:22:14.187+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:22:14.187+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:22:14.187+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:26:32.186+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:26:32.187+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:26:32.188+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:26:32.188+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:26:32.190+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:26:34.063+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:26:34.064+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:26:34.065+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:26:34.065+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:26:34.067+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:26:34.067+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:26:34.067+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:26:34.067+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:28:30.535+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:28:30.535+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:30.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:30.541+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:28:35.929+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:28:35.929+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:28:35.929+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T22:28:35.929+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T22:28:35.934+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:35.934+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:35.934+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:35.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:35.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:35.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:35.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:35.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:35.935+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:35.936+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T22:28:37.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:28:37.536+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:28:37.538+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:28:37.538+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:28:37.541+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:28:37.541+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:28:37.542+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:28:37.542+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T22:56:17.851+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:56:17.851+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T22:56:17.852+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T22:56:17.852+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T22:56:17.854+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T22:56:17.854+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T22:56:17.854+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T22:56:17.854+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:00:01.836+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:01.836+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:01.837+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:00:01.838+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:00:01.840+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:01.842+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:01.842+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:01.843+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:01.843+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:01.843+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:01.844+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:01.844+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:01.844+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:01.844+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:00:13.721+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:13.721+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:13.723+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:00:13.723+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:00:13.724+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:13.725+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:13.725+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:13.725+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:13.725+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:13.725+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:13.726+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:13.726+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:13.726+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:13.726+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:00:16.758+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:16.758+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:16.760+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:00:16.760+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:00:16.761+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:16.762+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:16.762+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:16.762+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-9] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:00:21.192+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:21.192+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:21.195+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:00:21.195+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:00:21.197+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:21.198+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:21.198+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:21.198+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:00:25.119+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:25.119+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:25.120+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:00:25.120+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:00:25.121+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:25.121+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:25.121+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:25.121+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:25.122+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:25.122+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:25.122+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:25.122+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:25.122+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:25.122+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:00:39.832+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:39.833+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:00:39.833+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:00:39.835+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-13T23:00:39.835+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:00:39.836+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:00:39.836+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:00:39.836+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-10] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:01:05.239+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:05.239+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:05.242+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:01:05.242+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:05.245+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:01:07.658+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:07.658+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:07.659+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:01:07.659+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:01:07.660+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:07.661+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:07.661+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:07.661+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:01:39.620+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:39.620+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:39.622+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:01:39.622+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:01:39.624+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:39.624+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:39.624+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:39.624+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:01:42.737+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:42.738+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:42.739+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:01:42.739+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:42.742+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:42.743+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:42.743+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:42.743+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:01:44.374+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:44.374+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:01:44.374+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:01:44.376+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:01:44.376+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:01:44.377+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:01:44.377+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:01:44.377+08:00 DEBUG 33740 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:02:27.915+08:00  INFO 33740 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T23:02:27.917+08:00  INFO 33740 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T23:02:30.799+08:00  INFO 9884 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 9884 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T23:02:30.800+08:00 DEBUG 9884 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T23:02:30.800+08:00  INFO 9884 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T23:02:30.836+08:00  INFO 9884 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T23:02:30.837+08:00  INFO 9884 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T23:02:31.667+08:00  INFO 9884 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T23:02:31.677+08:00  INFO 9884 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T23:02:31.678+08:00  INFO 9884 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T23:02:31.722+08:00  INFO 9884 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T23:02:31.722+08:00  INFO 9884 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 885 ms
2025-10-13T23:02:31.940+08:00  INFO 9884 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T23:02:32.047+08:00  INFO 9884 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@78714366
2025-10-13T23:02:32.049+08:00  INFO 9884 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T23:02:32.401+08:00  INFO 9884 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T23:02:32.425+08:00  INFO 9884 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T23:02:32.432+08:00  INFO 9884 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.9 seconds (process running for 2.185)
2025-10-13T23:02:41.257+08:00  INFO 9884 --- [_02vue] [http-nio-8060-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T23:02:41.257+08:00  INFO 9884 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T23:02:41.258+08:00  INFO 9884 --- [_02vue] [http-nio-8060-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T23:02:41.322+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:41.323+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:41.374+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:02:41.411+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:02:41.476+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:41.477+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:41.477+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:41.478+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:41.479+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:41.479+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:41.480+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:41.480+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:41.480+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:41.480+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-2] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:02:44.183+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:44.184+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:44.185+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:02:44.187+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:02:44.188+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:44.189+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:44.189+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:44.189+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:02:56.469+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:56.469+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:56.469+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:02:56.469+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:02:56.475+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:56.476+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:56.476+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:56.476+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:56.476+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:56.476+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:56.477+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:56.477+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:56.478+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:56.478+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:02:59.146+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:59.146+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:02:59.147+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:02:59.147+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:02:59.149+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:02:59.149+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:02:59.149+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:02:59.150+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:03:41.872+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:03:41.872+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:03:41.875+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:03:41.875+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:03:41.876+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:41.876+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:41.876+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:41.876+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:41.876+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:41.876+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:41.877+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:41.877+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:41.877+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:41.878+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:03:45.223+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:03:45.223+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:03:45.225+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:03:45.226+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:03:45.227+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:45.228+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:45.228+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:45.228+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:45.228+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:45.229+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:45.229+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:45.229+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:45.229+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:45.230+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:03:46.511+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:03:46.511+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:03:46.512+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:03:46.513+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-13T23:03:46.513+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:03:46.514+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:03:46.514+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:03:46.514+08:00 DEBUG 9884 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:04:34.895+08:00  INFO 9884 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T23:04:34.899+08:00  INFO 9884 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T23:04:36.333+08:00  INFO 11384 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 11384 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T23:04:36.335+08:00 DEBUG 11384 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T23:04:36.335+08:00  INFO 11384 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T23:04:36.375+08:00  INFO 11384 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T23:04:36.375+08:00  INFO 11384 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T23:04:37.197+08:00  INFO 11384 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T23:04:37.208+08:00  INFO 11384 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T23:04:37.209+08:00  INFO 11384 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T23:04:37.251+08:00  INFO 11384 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T23:04:37.252+08:00  INFO 11384 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 876 ms
2025-10-13T23:04:37.489+08:00  INFO 11384 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T23:04:37.601+08:00  INFO 11384 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74afb04b
2025-10-13T23:04:37.602+08:00  INFO 11384 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T23:04:37.947+08:00  INFO 11384 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T23:04:37.974+08:00  INFO 11384 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T23:04:37.985+08:00  INFO 11384 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.932 seconds (process running for 2.243)
2025-10-13T23:04:44.315+08:00  INFO 11384 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T23:04:44.316+08:00  INFO 11384 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T23:04:44.317+08:00  INFO 11384 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T23:04:44.386+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:44.387+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:44.443+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:04:44.492+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:04:44.577+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:44.579+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:44.580+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:44.581+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:04:48.206+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:48.207+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:48.207+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:04:48.208+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:04:48.208+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:48.210+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:48.210+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:48.210+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:04:55.595+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:55.595+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:55.596+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:04:55.597+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:04:55.598+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:55.598+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:55.598+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:55.598+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:55.599+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:55.599+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:55.599+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:55.599+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:55.600+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:55.600+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:04:59.468+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:59.469+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:04:59.470+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:04:59.470+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:04:59.471+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:59.472+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:59.472+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:59.472+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:59.473+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:59.473+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:59.473+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:04:59.474+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:04:59.474+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:04:59.474+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:05:00.657+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:05:00.658+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:05:00.659+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:05:00.659+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:05:00.660+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:05:00.661+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:05:00.661+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:05:00.661+08:00 DEBUG 11384 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:06:20.919+08:00  INFO 11384 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T23:06:20.925+08:00  INFO 11384 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T23:06:22.326+08:00  INFO 34752 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 34752 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T23:06:22.327+08:00 DEBUG 34752 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T23:06:22.327+08:00  INFO 34752 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T23:06:22.368+08:00  INFO 34752 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T23:06:22.368+08:00  INFO 34752 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T23:06:23.217+08:00  INFO 34752 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T23:06:23.221+08:00  INFO 34752 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T23:06:23.226+08:00  INFO 34752 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T23:06:23.265+08:00  INFO 34752 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T23:06:23.266+08:00  INFO 34752 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 897 ms
2025-10-13T23:06:23.501+08:00  INFO 34752 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T23:06:23.596+08:00  INFO 34752 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@674b2e13
2025-10-13T23:06:23.597+08:00  INFO 34752 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T23:06:23.931+08:00  INFO 34752 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T23:06:23.958+08:00  INFO 34752 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T23:06:23.965+08:00  INFO 34752 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.91 seconds (process running for 2.219)
2025-10-13T23:06:37.608+08:00  INFO 34752 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T23:06:37.608+08:00  INFO 34752 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T23:06:37.608+08:00  INFO 34752 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2025-10-13T23:06:37.689+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:06:37.690+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:06:37.728+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:06:37.766+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:06:37.844+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:06:37.846+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:06:37.846+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:06:37.847+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:06:48.193+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:06:48.193+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:06:48.194+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:06:48.194+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:06:48.195+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:06:48.196+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:06:48.196+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:06:48.197+08:00 DEBUG 34752 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:08:23.741+08:00  INFO 34752 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T23:08:23.746+08:00  INFO 34752 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T23:08:25.186+08:00  INFO 27848 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 27848 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T23:08:25.192+08:00 DEBUG 27848 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T23:08:25.192+08:00  INFO 27848 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T23:08:25.232+08:00  INFO 27848 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T23:08:25.233+08:00  INFO 27848 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T23:08:26.080+08:00  INFO 27848 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T23:08:26.090+08:00  INFO 27848 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T23:08:26.091+08:00  INFO 27848 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T23:08:26.130+08:00  INFO 27848 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T23:08:26.131+08:00  INFO 27848 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 897 ms
2025-10-13T23:08:26.372+08:00  INFO 27848 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T23:08:26.470+08:00  INFO 27848 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1aa2034d
2025-10-13T23:08:26.471+08:00  INFO 27848 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T23:08:26.790+08:00  INFO 27848 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T23:08:26.812+08:00  INFO 27848 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T23:08:26.819+08:00  INFO 27848 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.89 seconds (process running for 2.221)
2025-10-13T23:08:31.785+08:00  INFO 27848 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T23:08:31.785+08:00  INFO 27848 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T23:08:31.787+08:00  INFO 27848 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-10-13T23:08:31.861+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:08:31.862+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:08:31.946+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:08:32.025+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:08:32.058+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:08:32.064+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:08:32.064+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:08:32.065+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:08:35.468+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:08:35.469+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:08:35.470+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:08:35.470+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-13T23:08:35.473+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:08:35.473+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:08:35.474+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:08:35.474+08:00 DEBUG 27848 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:08:55.829+08:00  INFO 27848 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T23:08:55.833+08:00  INFO 27848 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T23:08:57.266+08:00  INFO 32068 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 32068 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T23:08:57.267+08:00 DEBUG 32068 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T23:08:57.268+08:00  INFO 32068 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T23:08:57.304+08:00  INFO 32068 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T23:08:57.304+08:00  INFO 32068 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T23:08:58.154+08:00  INFO 32068 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T23:08:58.165+08:00  INFO 32068 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T23:08:58.165+08:00  INFO 32068 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T23:08:58.212+08:00  INFO 32068 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T23:08:58.212+08:00  INFO 32068 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 907 ms
2025-10-13T23:08:58.448+08:00  INFO 32068 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T23:08:58.551+08:00  INFO 32068 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1bee31bf
2025-10-13T23:08:58.551+08:00  INFO 32068 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T23:08:58.902+08:00  INFO 32068 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T23:08:58.927+08:00  INFO 32068 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T23:08:58.932+08:00  INFO 32068 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.95 seconds (process running for 2.256)
2025-10-13T23:09:02.886+08:00  INFO 32068 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T23:09:02.887+08:00  INFO 32068 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T23:09:02.888+08:00  INFO 32068 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-10-13T23:09:02.950+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:02.951+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:02.993+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:09:03.099+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:09:03.139+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:03.141+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:03.141+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:03.142+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:09.010+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:09.011+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:09.011+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle
2025-10-13T23:09:09.012+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:09:09.013+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:09.013+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:09.014+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:09.014+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:09.014+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:09.014+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:09.015+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:09.015+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:09.015+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:09.015+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:09:10.188+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:10.188+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:10.189+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:09:10.189+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:09:10.190+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:10.191+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:10.191+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:10.191+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:13.027+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:13.027+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:13.029+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:09:13.029+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:09:13.031+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:13.031+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:13.031+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:13.031+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:15.861+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:15.861+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=102, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:15.862+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:09:15.862+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 102(Long)
2025-10-13T23:09:15.863+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:15.864+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:15.864+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:15.864+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-6] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:19.053+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:19.053+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:19.054+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:09:19.055+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:09:19.056+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:19.057+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:19.058+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:19.059+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-7] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:21.405+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:21.406+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:21.407+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status FROM vehicle WHERE id = ?
2025-10-13T23:09:21.407+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:09:21.408+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:21.409+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:21.409+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:21.410+08:00 DEBUG 32068 --- [_02vue] [http-nio-8060-exec-8] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:40.270+08:00  INFO 32068 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-10-13T23:09:40.272+08:00  INFO 32068 --- [_02vue] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-10-13T23:09:41.705+08:00  INFO 21760 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Starting Application using Java 17.0.16 with PID 21760 (I:\20250820\jsd2507-ssm-advance\_02vue\target\classes started by snl19 in I:\20250820\jsd2507-ssm-advance)
2025-10-13T23:09:41.707+08:00 DEBUG 21760 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-13T23:09:41.707+08:00  INFO 21760 --- [_02vue] [restartedMain] com._02vue.demo.Application              : No active profile set, falling back to 1 default profile: "default"
2025-10-13T23:09:41.747+08:00  INFO 21760 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13T23:09:41.749+08:00  INFO 21760 --- [_02vue] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13T23:09:42.569+08:00  INFO 21760 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8060 (http)
2025-10-13T23:09:42.578+08:00  INFO 21760 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-13T23:09:42.579+08:00  INFO 21760 --- [_02vue] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13T23:09:42.619+08:00  INFO 21760 --- [_02vue] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-13T23:09:42.619+08:00  INFO 21760 --- [_02vue] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 870 ms
2025-10-13T23:09:42.860+08:00  INFO 21760 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-13T23:09:42.961+08:00  INFO 21760 --- [_02vue] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c8d73a0
2025-10-13T23:09:42.962+08:00  INFO 21760 --- [_02vue] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-13T23:09:43.291+08:00  INFO 21760 --- [_02vue] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-10-13T23:09:43.316+08:00  INFO 21760 --- [_02vue] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8060 (http) with context path '/'
2025-10-13T23:09:43.323+08:00  INFO 21760 --- [_02vue] [restartedMain] com._02vue.demo.Application              : Started Application in 1.907 seconds (process running for 2.22)
2025-10-13T23:09:51.038+08:00  INFO 21760 --- [_02vue] [http-nio-8060-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13T23:09:51.038+08:00  INFO 21760 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-13T23:09:51.041+08:00  INFO 21760 --- [_02vue] [http-nio-8060-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-10-13T23:09:51.145+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:51.146+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=105, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:51.229+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-13T23:09:51.273+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 105(Long)
2025-10-13T23:09:51.305+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:51.323+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:51.323+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:51.324+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-1] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:09:54.393+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:54.393+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=104, brand=null, status=null, license=null, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:09:54.394+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle WHERE id = ?
2025-10-13T23:09:54.394+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 104(Long)
2025-10-13T23:09:54.395+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:09:54.396+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:09:54.396+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:09:54.396+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-3] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 1
2025-10-13T23:10:02.589+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:10:02.590+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:10:02.590+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:10:02.591+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-4] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
2025-10-13T23:10:12.179+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.controller.VehicleController     : 产讯参数VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:10:12.179+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.service.impl.ServeImplement      : 查询参数:VehicleQuery(id=null, brand=, status=, license=, geofenceBindStatus=null, geofenceId=null)
2025-10-13T23:10:12.180+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==>  Preparing: SELECT id,brand,license,model,color,displacement,code,type,price,reg_time as regTime, buy_time as buyTime,battery_type as batteryType, status,kilometers FROM vehicle
2025-10-13T23:10:12.180+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : ==> Parameters: 
2025-10-13T23:10:12.182+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:10:12.182+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:10:12.182+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:10:12.182+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:10:12.183+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:10:12.183+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:10:12.183+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.TypeHandler    : 调用此方法:type
2025-10-13T23:10:12.183+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.EnumHandler.BatterryHandler      : 调用此方法:batteryType
2025-10-13T23:10:12.184+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.vehicle.EnumHandler.StatusHandler  : 调用此方法:status
2025-10-13T23:10:12.184+08:00 DEBUG 21760 --- [_02vue] [http-nio-8060-exec-5] c._.d.v.mapper.VehicleMapper.select      : <==      Total: 3
