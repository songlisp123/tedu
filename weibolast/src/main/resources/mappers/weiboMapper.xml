<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weiboLast.demo.mapper.weiboMapper">

    <insert id="insertWeiBo" useGeneratedKeys="true"
        keyProperty="id">
        INSERT INTO weibo(title,content,create_time,update_time,user_id)
        VALUES(#{title},#{content},#{createTime},#{updateTime},#{userId})
    </insert>

    <resultMap id="detailMap" type="com.weiboLast.demo.pojo.vo.weiboIndexVo">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="nickname" column="nickname" />
        <result property="createTime" column="createTime" />
        <result property="updateTime" column="updateTime" />
        <result property="totalLikes" column="totalLikes" />
        <result property="totalUnLikes" column="totalUnLikes" />
        <collection property="tags" ofType="com.weiboLast.demo.pojo.entity.tag">
            <result property="message" column="message" />
            <result property="description" column="description" />
        </collection>
    </resultMap>
    <select id="selectWeiBo" resultMap="detailMap">
        SELECT w.id,w.title,w.content,w.create_time as createTime,
        w.update_time as updateTime,u.nickname,
        t.tag as message<!--标签-->,t.description,
        al.action as totalLikes<!--总喜欢-->,
        al.action  as totalUnLikes<!--踩-->
        <!--好吧，现在来说我有点不太会总喜欢和踩的集合函数-->
        FROM weibo as w
        INNER JOIN user as u ON w.user_id=u.id
        LEFT JOIN Article_likes as al ON w.id=al.weibo_id
        LEFT JOIN weibo_tag as wt ON w.id=wt.weibo_id
        LEFT JOIN tag as t ON wt.tag_id=t.id
        GROUP BY w.id
        ORDER BY w.update_time DESC,w.id DESC
        LIMIT #{pageNumber},#{maxMessageInOnePage}
    </select>

    <select id="countAllWeiBo" resultType="java.lang.Long">
        SELECT count(id)
        FROM weibo
    </select>

    <resultMap id="myMap" type="com.weiboLast.demo.pojo.vo.weiBoDetailVO">
        <id property="id" column="wid" />
        <result property="title" column="title" />
        <result property="content" column="wContent" />
        <result property="nickname" column="publisher" />
        <result property="createTime" column="wCreateTime" />
        <result property="updateTime" column="update_time" />
        <result property="totalLikes" column="totalLikes" />
        <result property="totalUnLikes" column="totalUnLikes" />
        <collection property="tags" ofType="com.weiboLast.demo.pojo.entity.tag">
            <result property="message" column="message" />
            <result property="description" column="description" />
        </collection>
        <collection property="comments" ofType="com.weiboLast.demo.pojo.vo.commentVO">
            <id property="id" column="cid" />
            <result property="content" column="cContent" />
            <result property="createTime" column="cCreateTime" />
            <result property="nickname" column="commentUser" />
        </collection>
    </resultMap>
    <select id="selectWeiBoById" resultMap="myMap">
        SELECT distinct w.id as wid<!--发布文章id-->,w.title,w.content as wContent<!--发布文章内容-->,
        w.create_time as wCreateTime<!--文章创建时间-->,
        w.update_time<!--文章修改时间-->,u.nickname as publisher<!--发布者昵称-->,
        c.id as cid<!--评论id-->,c.content as cContent<!--评论内容-->,
        c.create_time as cCreateTime<!--评论创建时间-->,
        cu.nickname as commentUser<!--评论人的昵称-->,
        al.action as totalLikes,
        t.tag as message<!--标签信息-->,t.description<!--标签描述-->
        FROM weibo as w
        INNER JOIN user as u ON w.user_id=u.id<!--连接用户表-->
        LEFT JOIN Article_likes as al ON w.id=al.weibo_id<!--连接喜欢表-->
        LEFT JOIN comment as c ON w.id=c.weibo_id<!--连接评论表-->
        LEFT JOIN user as cu ON c.user_id=cu.id<!--以防万一，重新设计用户表-->
        LEFT JOIN weibo_tag as wt ON w.id=wt.weibo_id<!--连接微博标签表-->
        LEFT JOIN tag as t ON wt.tag_id=t.id<!--连接标签表-->
        WHERE w.id=#{id}
        <!--这是一个优化后的版本，我不知道怎么搞的，但是就是行之有效-->
        <!--烦死了-->
    </select>

    <select id="countAllWeiBoIds" resultType="java.lang.Long">
        SELECT id
        FROM weibo
    </select>

    <update id="updateWeiBo">
        UPDATE weibo
        <set>
            update_time=CURRENT_TIMESTAMP(2),
            <if test="#{weiBoEditPara.title}!=null and #{weiBoEditPara.title}!=''">
                title=#{weiBoEditPara.title},
            </if>
            <if test="#{weiBoEditPara.content}!=null and #{weiBoEditPara.content}!=''">
                content=#{weiBoEditPara.content}
            </if>
        </set>
        WHERE id=#{weiBoEditPara.id}
        AND user_id=#{userId}
    </update>

    <delete id="delete">
        DELETE FROM weibo
        WHERE id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
        AND user_id=#{userId}
    </delete>

    <resultMap id="weiboIndex" type="com.weiboLast.demo.pojo.vo.weiboIndexVo">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="nickname" column="nickname" />
        <result property="createTime" column="createTime" />
        <result property="updateTime" column="updateTime" />
        <collection property="tags" ofType="com.weiboLast.demo.pojo.entity.tag">
            <result property="message" column="message" />
            <result property="description" column="description" />
        </collection>
    </resultMap>
    <select id="searchWeiBo" resultMap="weiboIndex">
        SELECT w.id,w.title,w.content,u.nickname,
        w.create_time as createTime,w.update_time as updateTime,
        t.tag as message,t.description
        FROM weibo as w
        JOIN user as u ON w.user_id=u.id
        LEFT JOIN weibo_tag as wt ON w.id=wt.weibo_id<!--连接微博标签表-->
        LEFT JOIN tag as t ON wt.tag_id=t.id<!--连接标签表-->
        WHERE w.title like CONCAT('%',#{title},'%')
        OR w.content like CONCAT('%',#{title},'%')
    </select>

    <select id="selectTagId" resultType="java.lang.Integer">
        SELECT id
        FROM tag
        WHERE tag=#{message}
    </select>

    <insert id="insertWeiAndTag" >
        INSERT INTO weibo_tag(weibo_id,tag_id)
        VALUES(#{weiboId},#{tagId})
    </insert>

    <resultMap id="selectweibotag" type="com.weiboLast.demo.pojo.vo.weiboIndexVo">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="nickname" column="nickname" />
        <result property="createTime" column="createTime" />
        <result property="updateTime" column="updateTime" />
        <collection property="tags" ofType="com.weiboLast.demo.pojo.entity.tag">
            <result property="message" column="message" />
            <result property="description" column="description" />
        </collection>
    </resultMap>
    <select id="selectWeiBoByTag" resultMap="selectweibotag">
        SELECT w.id,w.title,w.content,u.nickname,
        w.create_time as createTime,w.update_time as updateTime,
        t.tag as message,t.description
        FROM weibo as w
        JOIN user as u ON w.user_id=u.id
        LEFT JOIN weibo_tag as wt ON w.id=wt.weibo_id<!--连接微博标签表-->
        LEFT JOIN tag as t ON wt.tag_id=t.id<!--连接标签表-->
        WHERE t.tag in (#{tag})
    </select>

</mapper>
